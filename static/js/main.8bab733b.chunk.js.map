{"version":3,"sources":["../node_modules/peerjs/dist sync","actions/ready.js","actions/repeat.js","actions/setMove.js","actions/selectType.js","actions/changeStatus.js","actions/receiveReady.js","actions/receiveRepeat.js","reducers/game.js","scripts/getCoordinates.js","actions/send.js","actions/setRTC.js","actions/receive.js","actions/setPeerID.js","actions/setIsConnected.js","actions/setIsInitialised.js","scripts/makeSea.js","scripts/getShip.js","scripts/countShips.js","scripts/makeDeck.js","scripts/removeDeck.js","scripts/isThereShip.js","actions/placeShip.js","scripts/isThereShipDiagonally.js","scripts/isThereShipInCross.js","scripts/shootAroundSankShip.js","actions/receiveFire.js","scripts/itSank.js","actions/sendVictory.js","actions/clearFeedback.js","actions/randomPlacing.js","actions/receiveVictory.js","actions/receiveFeedback.js","reducers/sea.js","scripts/makeSquadron.js","reducers/index.js","reducers/rtc.js","store.js","components/Sea.js","components/Cell.js","components/Ally.js","components/Enemy.js","components/Ocean.js","scripts/RTC.js","components/TextButton.js","components/Select.js","components/Label.js","components/Placing.js","components/TextBlock.js","components/Game.js","components/App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","state","isAllyReady","isAllyWantRepeat","move","action","status","payload","type","isEnemyReady","isEnemyWantRepeat","initialState","match","map","item","parseInt","message","data","getCoordinates","interface","send","console","log","JSON","parse","stringify","waitingForFeedback","peerID","isConnected","isInitialised","ten","Array","y","x","hit","miss","ship","sank","string","split","count","length","reduce","a","b","shipsToPlace","fourDecker","squadron","threeDecker","twoDecker","singleDecker","numbers","Object","values","total","currentType","findIndex","deck","coordinates","toStart","newState","pop","unshift","forEach","index","ally","countShips","splice","push","sea","thereIsShip","isThereShip","getShip","removeDeck","isThereShipDiagonally","thereIsShipInCross","filter","i","isThereShipInCross","newDeck","makeDeck","newSea","newShip","xsLength","ysLength","condition","head","shoot","feedback","itSank","allyShipsLeft","shootAroundSankShip","row","cell","shifts","brandNewState","_","direction","Math","round","random","getRandomCoordinates","floor","undefined","error","place","enemy","enemyShipsLeft","makeSea","h","reducers","combineReducers","game","selectType","changeStatus","ready","repeat","setMove","receiveReady","receiveRepeat","rtc","isClient","setRTC","receive","setPeerID","setIsConnected","setIsInitialised","clearFeedback","placeShip","randomPlacing","receiveFire","receiveFeedback","receiveVictory","sendVictory","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Wrapper","styled","div","props","border","Content","grid","children","Cell","css","times","params","className","onClick","connect","dispatch","Sea","key","fire","RTC","this","lastPeerID","init","peer","Peer","connection","on","c","close","reconnect","handleDisconnect","join","reliable","serialization","open","span","StyledSelect","Output","input","attrs","Input","Button","button","network","useRef","output","useState","changed","setChanged","selected","setSelected","current","value","useEffect","select","ref","onChange","event","preventDefault","onSelect","onKeyPress","TextButton","label","HintLabel","Confirm","Label","Ship","Deck","column","Times","Number","PlacingSea","PlacingShip","decks","number","Wait","Result","Repeat","Ready","resultText","victory","defeat","reset","Ocean","newRound","ReactDOM","render","path","component","App","document","getElementById"],"mappings":"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","file":"static/js/main.8bab733b.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 47;","export default (state) => ({\n  ...state,\n  isAllyReady: true,\n});\n","export default (state) => ({\n  ...state,\n  isAllyWantRepeat: true,\n});\n","export default (state) => ({\n  ...state,\n  move: !state.move,\n});\n","export default (state, action) => ({\n  ...state,\n  status: action.payload ? `connect` : `place`,\n  type: action.payload ? `pvp` : `comp`,\n  isEnemyReady: action.payload ? state.isEnemyReady : true,\n});\n","export default (state, action) => ({\n  ...state,\n  status: action.payload,\n});\n","export default (state) => ({\n  ...state,\n  isEnemyReady: true,\n});\n","export default (state) => ({\n  ...state,\n  isEnemyWantRepeat: true,\n});\n","import ready from '../actions/ready';\nimport repeat from '../actions/repeat';\nimport setMove from '../actions/setMove';\nimport selectType from '../actions/selectType';\nimport changeStatus from '../actions/changeStatus';\nimport receiveReady from '../actions/receiveReady';\nimport receiveRepeat from '../actions/receiveRepeat';\n\n/**\n * game statuses:\n * choose  -- it's waiting for game type to be chosen\n * connect -- it's waiting for opponent to connect\n * place   -- it's waiting for all ships to be placed (switched automatically)\n * confirm -- it's waiting for confirm of ship placement\n * wait    -- it's waiting for opponent to confirm ship placement\n * play    -- ...\n * victory -- ...\n * defeat  -- ...\n *\n * game types:\n * pvp    -- you versus someone on network\n * comp   -- you versus computer\n *\n * isAllyReady -- flag shows that you confirmed ship placement\n * isEnemyReady -- flag shows that opponent confirmed ship placement\n *\n * move -- flag shows if it's your turn to fire\n */\n\nconst initialState = (status = `connect`, move = false) => ({\n  type: null,\n  isAllyReady: false,\n  isEnemyReady: false,\n  isAllyWantRepeat: false,\n  isEnemyWantRepeat: false,\n  status,\n  move,\n});\n\nexport default (state = initialState(), action) => {\n  switch (action.type) {\n    case `SELECT_TYPE`:\n      return selectType(state, action);\n\n    case `CHANGE_STATUS`:\n      return changeStatus(state, action);\n\n    case `READY`:\n      return ready(state);\n\n    case `REPEAT`:\n      return repeat(state);\n\n    case `SEND`: {\n      switch (action.payload.type) {\n        case `feedback`:\n          return action.payload.feedback === `miss`\n            ? setMove(state)\n            : state;\n\n        case `victory`:\n          return changeStatus(state, { payload: `victory` });\n\n        default:\n          return state;\n      }\n    }\n\n    case `RECEIVE`: {\n      switch (action.payload.type) {\n        case `ready`:\n          return receiveReady(state);\n\n        case `repeat`:\n          return receiveRepeat(state);\n\n        case `feedback`:\n          return action.payload.feedback === `miss`\n            ? setMove(state)\n            : state;\n\n        case `victory`:\n          return changeStatus(state, { payload: `defeat` });\n\n        default:\n          return state;\n      }\n    }\n\n    case `SET_MOVE`:\n      return action.payload\n        ? setMove(state)\n        : state;\n\n    case `RESET`:\n      return initialState();\n\n    case `NEW_ROUND`:\n      return initialState(`place`, !state.move);\n\n    default:\n      return state;\n  }\n}\n","/**\n * input: `cell-3-4-ally`\n * output: [3, 4]\n */\n\n/**\n * choose less fucked up version:\n  */\n// export default (id) => id.split('-').reduce((a, i) => +i ? [ ...a, +i] : a, []);\nexport default (id) => id.match(/\\d+-/g).map(item => parseInt(item));\n","import getCoordinates from '../scripts/getCoordinates';\n\nexport default (state, action) => {\n  const message = action.payload.type === `fire`\n    ? { type: `fire`, data: getCoordinates(action.payload.data) }\n    : { ...action.payload };\n\n  state.interface.send(message);\n  console.log(`sent:     `, JSON.parse(JSON.stringify(message)));\n\n  return {\n    ...state,\n    waitingForFeedback: action.payload.type === `fire`,\n  };\n}\n","export default (state, action) => ({\n  ...state,\n  ...action.payload,\n});\n","export default (state, action) => {\n  console.log(`received: `, JSON.parse(JSON.stringify(action.payload)));\n  return {\n    ...state,\n    waitingForFeedback: false,\n  };\n}\n","export default (state, action) => ({\n  ...state,\n  peerID: action.payload,\n});\n","export default (state, action) => ({\n  ...state,\n  isConnected: action.payload,\n});\n","export default (state, action) => ({\n  ...state,\n  isInitialised: action.payload,\n});\n","export default (type) => {\n  const ten = [...Array(10).keys()];\n\n  return ten.map(y =>\n    ten.map(x =>\n      ({\n        id: `cell-${ x }-${ y }-${ type }`,\n        hit: false,\n        miss: false,\n        ship: false,\n        sank: false,\n      })\n    )\n  );\n};\n","/**\n * input: `1-2-3`\n * output: [1, 2, 3]\n */\n\nexport default (string) => string.split(`-`).map(item => parseInt(item));\n","/**\n * counting ships to be placed\n * takes every ship in array 'type',\n * if ship has null as element - returns 1 (as one that need placement),\n * if not -- 0 (as placed).\n * then returns number of ships that not placed\n */\n\nconst count = (type) => type\n  .map(item =>                  // let's take a ship\n    item[0] === null            // i'ts first deck empty?\n      ? 1                       // it should be placed\n      : item.length === 1       // it's single decker?\n      ? 0                       // nothing to do here\n      : item.reduce((a, b) =>   // let's look at all it's decks\n        a === 1                 // was there empty deck earlier?\n          ? 1                   // there was, keep it to the end\n          : b === null          // is this deck empty?\n            ? 1                 // it should be placed\n            : 0                 // nothing to do here\n      )\n  )\n  .reduce((a, b) => a + b);     // sum of all ships that need to be placed\n\nexport default (state) => {\n  const shipsToPlace = {\n    fourDecker: count(state.squadron[0]),\n    threeDecker: count(state.squadron[1]),\n    twoDecker: count(state.squadron[2]),\n    singleDecker: count(state.squadron[3]),\n  };\n\n  const numbers = Object.values(shipsToPlace);\n  shipsToPlace.total = numbers.reduce((a, b) => a + b);\n  const currentType = numbers.findIndex(a => a !== 0);\n\n  return {\n    ...state,\n    shipsToPlace,\n    currentType,\n  };\n}\n","import countShips from './countShips';\n\n/**\n * adding new deck to the ship;\n * renewing 'ship' parameter of all cells of that ship\n */\n\nexport default (type, ship, deck, coordinates, state, toStart) => {\n  const newState = { ...state };\n\n  if (toStart) {\n    newState.squadron[type][ship].pop();\n    newState.squadron[type][ship].unshift(coordinates);\n  } else {\n    newState.squadron[type][ship][deck] = coordinates;\n  }\n\n  newState.squadron[type][ship].forEach((item, index) => {\n    item && (newState.ally[item[1]][item[0]].ship = `${ type }-${ ship }-${ index }`);\n  });\n\n  return countShips(newState);\n}\n","import countShips from './countShips';\n\n/**\n * removing deck from the ship;\n * removing 'ship' parameter of cell of removed deck\n * and renewing it for the rest cells of that ship\n */\n\nexport default (type, ship, deck, coordinates, state) => {\n  const newState = { ...state };\n\n  newState.squadron[type][ship].splice(deck, 1);\n  newState.squadron[type][ship].push(null);\n\n  newState.ally[coordinates[1]][coordinates[0]].ship = false;\n  newState.squadron[type][ship].forEach((item, index) => {\n    item && (newState.ally[item[1]][item[0]].ship = `${ type }-${ ship }-${ index }`);\n  });\n\n  return countShips(newState);\n}\n","/**\n * returns ship parameter of cell with current coordinates\n */\n\nexport default (sea, coordinates) => sea[coordinates[1]][coordinates[0]].ship;\n","import getShip from '../scripts/getShip';\nimport makeDeck from '../scripts/makeDeck';\nimport removeDeck from '../scripts/removeDeck';\nimport isThereShip from '../scripts/isThereShip';\nimport getCoordinates from '../scripts/getCoordinates';\nimport isThereShipInCross from '../scripts/isThereShipInCross';\nimport isThereShipDiagonally from '../scripts/isThereShipDiagonally';\n\nexport default (state, action) => {\n  const newState = { ...state };\n  const coordinates = getCoordinates(action.payload);\n\n  /**\n   * removing decks from ship\n   */\n  const thereIsShip = isThereShip(newState.ally, coordinates);\n  if (thereIsShip) {\n    /**\n     * removing possible only with ends of ships,\n     * decks in the middle could not be deleted\n     */\n    const [type, ship, deck] = getShip(thereIsShip);\n    return (deck === 0 || !newState.squadron[type][ship][deck + 1])\n      ? removeDeck(type, ship, deck, coordinates, newState)\n      : newState;\n  }\n\n  /**\n   * doing nothing if there are ships diagonally\n   */\n  const thereIsShipDiagonally = isThereShipDiagonally(newState.ally, coordinates);\n  if (thereIsShipDiagonally) return newState;\n\n  /**\n   * adding deck to the ship\n   */\n  const thereIsShipInCross = isThereShipInCross(newState.ally, coordinates);\n  if (thereIsShipInCross.length === 1) {\n    /**\n     * if clicked at the cell next to only one ship\n     * horizontally or vertically,\n     * see if we can add deck with this cell coordinates\n     * to this ship\n     */\n    const [type, ship] = thereIsShipInCross[0].split(`-`).map(item => parseInt(item));\n    for (let newDeck = 1; newDeck < newState.squadron[type][ship].length; newDeck++) {\n      if (newState.squadron[type][ship][newDeck] === null) {\n        const toStart = (\n          coordinates[0] < newState.squadron[type][ship][0][0] ||\n          coordinates[1] < newState.squadron[type][ship][0][1]\n        );\n        return makeDeck(type, ship, newDeck, coordinates, newState, toStart);\n      }\n    }\n\n    return newState;\n  }\n\n  /**\n   * placing new ship\n   */\n  for (let i = 0; i < newState.squadron[newState.currentType].length; i++) {\n    const ship = newState.squadron[newState.currentType][i];\n    const shipIsFull = ship.filter(i => i).length === ship.length;\n    if (shipIsFull) continue;\n      /**\n       * new deck must be first deck of ship,\n       * adding decks handled previously with `thereIsShipInCross`.\n       * it`s made to prevent breaking order of ship placement\n       * (four decker -> three decker -> two decker -> single decker)\n       */\n    return ship[0] === null\n      ? makeDeck(newState.currentType, i, 0, coordinates, newState, false)\n      : newState;\n  }\n\n  return newState;\n}\n","/**\n * input: coordinates of `a` cell\n * return: first not-false ship parameter of any `b` cell\n * (going clockwise, starting with left-top)\n *\n * ____________\n * |_b_|___|_b_|\n * |___|_a_|___|\n * |_b_|___|_b_|\n *\n */\n\nexport default (sea, coordinates) => (\n  (\n    sea[coordinates[1] - 1] && (\n      (\n        sea[coordinates[1] - 1][coordinates[0] - 1] &&\n        sea[coordinates[1] - 1][coordinates[0] - 1].ship\n      )\n      ||\n      (\n        sea[coordinates[1] - 1][coordinates[0] + 1] &&\n        sea[coordinates[1] - 1][coordinates[0] + 1].ship\n      )\n    )\n  ) || (\n    sea[coordinates[1] + 1] && (\n      (\n        sea[coordinates[1] + 1][coordinates[0] - 1] &&\n        sea[coordinates[1] + 1][coordinates[0] - 1].ship\n      )\n      ||\n      (\n        sea[coordinates[1] + 1][coordinates[0] + 1] &&\n        sea[coordinates[1] + 1][coordinates[0] + 1].ship\n      )\n    )\n  )\n);\n","/**\n * input: coordinates of `a` cell\n * return: array of not-false ship parameters of all `b` cells\n * (going clockwise, starting with top)\n *\n * ____________\n * |___|_b_|___|\n * |_b_|_a_|_b_|\n * |___|_b_|___|\n *\n */\n\nexport default (sea, coordinates) => [\n  (\n    sea[coordinates[1] - 1] &&\n    sea[coordinates[1] - 1][coordinates[0]] &&\n    sea[coordinates[1] - 1][coordinates[0]].ship\n  ),\n  (\n    sea[coordinates[1] + 1] &&\n    sea[coordinates[1] + 1][coordinates[0]] &&\n    sea[coordinates[1] + 1][coordinates[0]].ship\n  ),\n  (\n    sea[coordinates[1]][coordinates[0] - 1] &&\n    sea[coordinates[1]][coordinates[0] - 1].ship\n  ),\n  (\n    sea[coordinates[1]][coordinates[0] + 1] &&\n    sea[coordinates[1]][coordinates[0] + 1].ship\n  ),\n].filter(i => i);\n","/**\n * input: ship array\n * return: sea with all cells around ship setting miss parameter\n */\n\nexport default (sea, ship) => {\n  const newSea = [...sea];\n  const newShip = [...ship];\n\n  const [xsLength, ysLength] = newShip.length === 1        // lengths of arrays of cells around ship\n    ? [3, 3]                                              // for single decker (1x1) it's 3x3\n    : newShip[1][1] - newShip[0][1] === 0\n      ? [newShip.length + 2, 3]                           // ship length + 2 cells around\n      : [3, newShip.length + 2];\n\n  const condition = (x, y) =>                             // returns false if ship has cell with x and y coordinates\n    newShip.length === 1\n      ? !(x === 1 && y === 1)\n      : newShip[1][1] - newShip[0][1] === 0\n        ? !(x > 0 && x < newShip.length + 1 && y === 1)\n        : !(y > 0 && y < newShip.length + 1 && x === 1);\n\n  const shoot = (x, y) => {\n    const head = newShip[0];                               // first deck of ship (leftmost or topmost)\n    if (\n      newSea[y - 1 + head[1]] &&                           // -1 because 0 would hit ship cell, and we need cell before\n      newSea[y - 1 + head[1]][x - 1 + head[0]]\n    ) {\n      newSea[y - 1 + head[1]][x - 1 + head[0]].miss = true;\n    }\n  };\n\n  [...Array(ysLength).keys()].forEach(y => {\n    [...Array(xsLength).keys()].forEach(x => {\n      condition(x, y) && shoot(x, y);\n    });\n  });\n\n  return newSea;\n}\n","import itSank from '../scripts/itSank';\nimport getShip from '../scripts/getShip';\nimport isThereShip from '../scripts/isThereShip';\nimport shootAroundSankShip from '../scripts/shootAroundSankShip';\n\nexport default (state, action) => {\n  let feedback;\n  const data = [];\n  const newState = { ...state };\n  const coordinates = [...action.payload.data];\n  const thereIsShip = isThereShip(newState.ally, coordinates);\n\n  if (thereIsShip) {\n    newState.ally[coordinates[1]][coordinates[0]].hit = true;\n    const [type, ship] = getShip(thereIsShip);\n    if (itSank(type, ship, newState)) {\n      newState.allyShipsLeft -= 1;\n      if (newState.allyShipsLeft === 0) {\n        newState.feedback = { type: `defeat` };\n        return newState;\n      }\n\n      newState.squadron[type][ship].forEach(item => {\n        newState.ally[item[1]][item[0]].sank = true;\n        data.push(item);\n      });\n\n      newState.ally = shootAroundSankShip(newState.ally, data);\n      feedback = `sank`;\n    } else {\n      feedback = `hit`;\n    }\n  } else {\n    feedback = `miss`;\n    newState.ally[coordinates[1]][coordinates[0]].miss = true;\n  }\n\n  data.length === 0 && data.push(coordinates);\n  newState.feedback = { type: `feedback`, data, feedback };\n  return newState;\n}\n","export default (type, ship, state) => {\n  const areAllDecksHitted = (a, i) => state.ally[i[1]][i[0]].hit && a;\n  return state.squadron[type][ship].reduce(areAllDecksHitted, true);\n}\n","/**\n * 0 == empty\n * 1 == miss\n * 2 == sank\n * 3 == hit\n * 4 == ship\n */\n\nexport default (state) => ({\n  ...state,\n  feedback: {\n    type: `victory`,\n    data: [\n      ...state.ally.map(row =>\n        row.map(cell =>\n          cell.miss\n            ? 1\n            : cell.sank\n              ? 2\n              : cell.hit\n                ? 3\n                : cell.ship\n                  ? 4\n                  : 0\n        )\n      )\n    ],\n  },\n});\n","export default (state) => ({ ...state, feedback: null });\n","import countShips from '../scripts/countShips';\n\nexport default (state) => {\n  const newState = { ...state };\n  const getDirection = () => Math.round(Math.random());     // 0 == horizontal, 1 == vertical\n  const shifts = [                                          //constrains of head coordinates for all ship types\n    [\n      [-3, 0],\n      [0, -3],\n    ],\n    [\n      [-2, 0],\n      [0, -2],\n    ],\n    [\n      [-1, 0],\n      [0, -1],\n    ],\n    [\n      [0, 0],\n      [0, 0],\n    ],\n  ];\n\n  const getRandomCoordinates = (type, direction) => {\n    /**\n     * create random coordinates in constrained range;\n     * check if there is ships diagonally or in cross\n     * to first deck with this coordinates and all other decks;\n     * if there is -- create new coordinates recursively.\n     * first deck of ship is leftmost or topmost\n     * for horizontal or vertical direction respectively\n     * TODO: handle case with too much recursion\n     */\n    let coordinates = [\n      Math.floor(Math.random() * (10 + shifts[type][direction][0])),\n      Math.floor(Math.random() * (10 + shifts[type][direction][1])),\n    ];\n\n    try {\n      for (let i = -1; i <= newState.squadron[type][0].length + 1; i++) {\n        if (\n          (\n            direction &&\n            newState.ally[coordinates[1] + i] !== undefined && (\n              (\n                newState.ally[coordinates[1] + i][coordinates[0] - 1] !== undefined &&\n                newState.ally[coordinates[1] + i][coordinates[0] - 1].ship\n              ) || (\n                newState.ally[coordinates[1] + i][coordinates[0]] !== undefined &&\n                newState.ally[coordinates[1] + i][coordinates[0]].ship\n              ) || (\n                newState.ally[coordinates[1] + i][coordinates[0] + 1] !== undefined &&\n                newState.ally[coordinates[1] + i][coordinates[0] + 1].ship\n              )\n            )\n          ) || (\n            (\n              newState.ally[coordinates[1] - 1] !== undefined &&\n              newState.ally[coordinates[1] - 1][coordinates[0] + i] !== undefined &&\n              newState.ally[coordinates[1] - 1][coordinates[0] + i].ship\n            ) || (\n              newState.ally[coordinates[1]][coordinates[0] + i] !== undefined &&\n              newState.ally[coordinates[1]][coordinates[0] + i].ship\n            ) || (\n              newState.ally[coordinates[1] + 1] !== undefined &&\n              newState.ally[coordinates[1] + 1][coordinates[0] + i] !== undefined &&\n              newState.ally[coordinates[1] + 1][coordinates[0] + i].ship\n            )\n          )\n        ) {\n          return getRandomCoordinates(type, direction);\n        }\n      }\n    } catch (e) {\n      console.error(e);\n      return;\n    }\n    return coordinates;\n  };\n\n  const place = (state) => {\n    const brandNewState = { ...state };\n\n    try {\n      brandNewState.squadron.forEach((_, type) => {\n        brandNewState.squadron[type].forEach((_, ship) => {\n          const direction = getDirection();\n          const coordinates = getRandomCoordinates(type, direction);\n          if (!coordinates) throw new Error(`javascript too weak for much recursion`);\n\n          brandNewState.squadron[type][ship] = brandNewState.squadron[type][ship].map((_, index) =>\n            direction === 0\n              ? [coordinates[0] + index, coordinates[1]]\n              : [coordinates[0], coordinates[1] + index]\n          );\n\n          brandNewState.squadron[type][ship].forEach((item, index) => {\n            item && (brandNewState.ally[item[1]][item[0]].ship = `${ type }-${ ship }-${ index }`);\n          });\n        })\n      });\n\n      return countShips(brandNewState);\n    } catch (e) {\n      console.error(e);\n      return state;\n    }\n  };\n\n  return place(newState);\n}\n","/**\n * 0 == empty\n * 1 == miss\n * 2 == sank\n * 3 == hit\n * 4 == ship\n */\n\nexport default (state, action) => ({\n  ...state,\n  enemy: [\n    ...action.payload.data.map((row, y) =>\n      row.map((cell, x) => ({\n        id: `cell-${ x }-${ y }-enemy`,\n        miss: cell === 1,\n        sank: cell === 2,\n        hit: cell === 3 || cell === 2,\n        ship: cell === 4 || cell === 3 || cell === 2,\n      }))\n    )\n  ],\n});\n","import shootAroundSankShip from '../scripts/shootAroundSankShip';\n\nexport default (state, action) => {\n  const newState = { ...state };\n  const ship = [...action.payload.data];\n  const feedback = action.payload.feedback;\n\n  switch (feedback) {\n    case `miss`: {\n      newState.enemy[ship[0][1]][ship[0][0]].miss = true;\n      break;\n    }\n\n    case `hit`: {\n      newState.enemy[ship[0][1]][ship[0][0]].ship = true;\n      newState.enemy[ship[0][1]][ship[0][0]].hit = true;\n      break;\n    }\n\n    case `sank`: {\n      ship.forEach(item => {\n        newState.enemy[item[1]][item[0]].hit = true;\n        newState.enemy[item[1]][item[0]].ship = true;\n        newState.enemy[item[1]][item[0]].sank = true;\n      });\n      newState.enemy = shootAroundSankShip(newState.enemy, ship);\n      newState.enemyShipsLeft -= 1;\n\n      if (newState.enemyShipsLeft === 0) {\n        newState.feedback = { type: `victory`, data: [...newState.ally] };\n        return newState;\n      }\n\n      break;\n    }\n\n    default: break;\n  }\n  return newState;\n}\n","import makeSea from '../scripts/makeSea';\nimport placeShip from '../actions/placeShip';\nimport receiveFire from '../actions/receiveFire';\nimport sendVictory from '../actions/sendVictory';\nimport makeSquadron from '../scripts/makeSquadron';\nimport clearFeedback from '../actions/clearFeedback';\nimport randomPlacing from '../actions/randomPlacing';\nimport receiveVictory from '../actions/receiveVictory';\nimport receiveFeedback from '../actions/receiveFeedback';\n\n/**\n * shipsToPlace -- number of ships to be placed (by type)\n * shipsToPlace.total -- total amount of ships to be placed (for triggering 'confirm' state)\n * currentType -- number of type of ship that will be placed next (for arrow indicator in Placing component)\n * allyShipsLeft -- number of your not-sank ships\n * enemyShipsLeft -- number of your opponent not-sank ships\n * feedback -- feedback message, formed for sending\n * feedbackReceived -- bool to prevent firing more than once (happens with slow network)\n */\n\nconst initialState = () => ({\n  ally: makeSea(`ally`),\n  enemy: makeSea(`enemy`),\n  squadron: makeSquadron(),\n  shipsToPlace: {\n    fourDecker: 1,\n    threeDecker: 2,\n    twoDecker: 3,\n    singleDecker: 4,\n    total: 10,\n  },\n  currentType: 0,\n  allyShipsLeft: 10,\n  enemyShipsLeft: 10,\n  feedback: null,\n});\n\nexport default (state = initialState(), action) => {\n  switch (action.type) {\n    case `SEND`:\n      return (action.payload.type === `feedback` || action.payload.type === `defeat`)\n        ? clearFeedback(state)\n        : state;\n\n    case `PLACE_SHIP`:\n      return placeShip(state, action);\n\n    case `RANDOM`:\n      return randomPlacing({ ...state, ally: makeSea(`ally`) });\n\n    case `RECEIVE`: {\n      switch (action.payload.type) {\n        case `fire`:\n          return receiveFire(state, action);\n\n        case `feedback`:\n          return receiveFeedback(state, action);\n\n        case `victory`:\n          return receiveVictory(state, action);\n\n        case `defeat`:\n          return sendVictory(state, action);\n\n        default:\n          return state;\n      }\n    }\n\n    case `RESET`:\n    case `NEW_ROUND`:\n      return initialState();\n\n    default:\n      return state;\n  }\n};\n","/**\n * there are four ship types:\n * 4-deck (1pc)\n * 3-deck (2pc)\n * 2-deck (3pc)\n * 1-deck (4pc)\n *\n * output is array of all ships\n * each ship is array of decks\n * each deck is array of coordinates -- [x, y]\n * by default deck is null\n */\n\nexport default () =>\n  [...Array(4).keys()].map(h =>\n    [...Array(h + 1)].map(_ =>\n      [...Array(4 - h)].map(_ =>\n        null\n      )\n    )\n  );\n","import { combineReducers } from 'redux';\nimport game from './game';\nimport rtc from './rtc';\nimport sea from './sea';\n\nconst reducers = combineReducers({\n  game,\n  rtc,\n  sea,\n});\n\nexport default reducers;\n","import send from '../actions/send';\r\nimport setRTC from '../actions/setRTC';\r\nimport receive from '../actions/receive';\r\nimport setPeerID from '../actions/setPeerID';\r\nimport setIsConnected from '../actions/setIsConnected';\r\nimport setIsInitialised from '../actions/setIsInitialised';\r\n\r\n/**\r\n * peerID -- ...\r\n * interface -- ...\r\n * isClient -- ...\r\n * isConnected -- ...\r\n * isInitialised -- ...\r\n * waitingForFeedback -- bool to prevent firing more than once (happens with slow network)\r\n */\r\n\r\n const initialState = () => ({\r\n  peerID: '',\r\n  interface: null,\r\n  isClient: false,\r\n  isConnected: false,\r\n  isInitialised: false,\r\n  waitingForFeedback: false,\r\n});\r\n\r\n\r\nexport default (state = initialState(), action) => {\r\n  switch (action.type) {\r\n    case `SET_RTC`:\r\n      return setRTC(state, action);\r\n\r\n    case `SEND`:\r\n      return send(state, action);\r\n\r\n    case `READY`:\r\n      return send(state, { payload: { type: `ready` }});\r\n\r\n    case `REPEAT`:\r\n      return send(state, { payload: { type: `repeat` }});\r\n\r\n    case `RECEIVE`:\r\n      return receive(state, action);\r\n\r\n    case `SET_PEER_ID`:\r\n      return setPeerID(state, action);\r\n\r\n    case `SET_IS_CONNECTED`:\r\n      return setIsConnected(state, action);\r\n\r\n    case `SET_IS_INITIALISED`:\r\n      return setIsInitialised(state, action);\r\n\r\n    case `RESET`:\r\n      return initialState();\r\n\r\n    default: return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(\n    applyMiddleware(thunkMiddleware)\n  )\n);\n\nexport default store;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin: 10px;\n  width: calc(50vmin - 26px);\n  height: calc(50vmin - 26px);\n  min-width: 300px;\n  min-height: 300px;\n  box-sizing: border-box;\n  border: 3px double ${ props => props.border ? props.move ? `#555` : `#aaa` : `#000` };\n  overflow: hidden;\n  user-select: none;\n`;\n\nconst Content = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  display: grid;\n  grid-gap: 1px;\n  grid-template: repeat(10, 1fr) / repeat(10, 1fr);\n`;\n\nexport default (props) =>\n  <Wrapper { ...props }>\n    <Content grid={ props.grid }>\n      { props.children }\n    </Content>\n  </Wrapper>\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst Cell = styled.div`\n  box-sizing: border-box;\n  background-color: #000;\n  background-clip: content-box;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: 110% 110%;\n\n  ${\n    props => props.grid && css`\n      outline: 1px dotted #222;\n    `\n  }\n\n  ${\n    props => ((props.ship && !props.sank) || props.place) && css`\n      outline: 1px solid #aaa;\n      z-index: 1;\n    `\n  }\n\n  ${\n    props => ((props.hit && !props.sank) || props.times) && css`\n      background-image: var(--hit);\n    `\n  }\n\n  ${\n    props => props.sank && css`\n      outline: 1px solid #555;\n      background-image: var(--sank);\n      z-index: 1;\n    `\n  }\n\n  ${\n    props => props.miss && css`\n      background-image: var(--miss);\n    `\n  }\n\n  ${\n    props => props.enemy && props.move && !props.miss && !props.hit && !props.ship && css`\n      :hover {\n        background-image: var(--hover);\n      }\n    `\n  }\n`;\n\nexport default (props) => {\n  const params = {\n    move: props.move,\n    enemy: props.enemy,\n    place: props.place,\n    times: props.times,\n    children: props.children,\n    className: props.className,\n    hit: props.data && props.data.hit,\n    miss: props.data && props.data.miss,\n    sank: props.data && props.data.sank,\n    ship: props.data && props.data.ship,\n    grid: props.data && !props.ship\n  };\n\n  const handleClick = () => {\n    props.onClick &&\n    (props.enemy === props.move) &&\n    !props.data.hit &&\n    !props.data.miss &&\n    props.onClick(props.data.id);\n  };\n\n  return <Cell onClick={ handleClick } { ...params } />\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Sea from './Sea';\nimport Cell from './Cell';\n\nconst Ally = (props) =>\n  <Sea border grid move={ props.game.move }>\n    {\n      props.sea.ally.map(row =>\n        row.map(cell =>\n          <Cell key={ cell.id } data={ cell } onClick={ (props.game.status === `place` || props.game.status === `confirm`) && props.place } />\n        )\n      )\n    }\n  </Sea>;\n\nconst mapStateToProps = (state) => ({\n  game: state.game,\n  sea: state.sea,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  place: (payload) => dispatch({ type: `PLACE_SHIP`, payload }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Ally);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Sea from './Sea';\nimport Cell from './Cell';\n\nconst Enemy = (props) =>\n  <Sea border grid move={ !props.game.move }>\n    {\n      props.sea.enemy.map(row =>\n        row.map(cell =>\n          <Cell key={ cell.id } data={ cell } onClick={ props.fire } move={ props.game.status === `play` && props.game.move && !props.rtc.waitingForFeedback } enemy />\n        )\n      )\n    }\n  </Sea>;\n\nconst mapStateToProps = (state) => ({\n  game: state.game,\n  rtc: state.rtc,\n  sea: state.sea,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fire: (payload) => dispatch({ type: `SEND`, payload: { type: `fire`, data: payload }}),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Enemy);\n","import styled from 'styled-components';\n\nexport default styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: center;\n`;\n","import Peer from 'peerjs';\n\nexport default function RTC(props) {\n  this.lastPeerID = null;\n\n  this.init = () => {\n    this.peer = new Peer();\n    this.connection = null;\n    props.setIsInitialised(true);\n\n    this.peer.on('open', () => {\n      if (this.peer.id === null) {\n        this.peer.id = this.lastPeerID;\n      } else {\n        this.lastPeerID = this.peer.id;\n      }\n      props.setPeerID(this.peer.id);\n    });\n\n    this.peer.on('connection', (c) => {\n      if (this.connection) {\n        c.on('open', c.close);\n        return;\n      }\n      this.connection = c;\n      this.ready();\n    });\n\n    this.peer.on('disconnected', () => {\n      // this.peer.id = this.lastPeerID;\n      // this.peer._lastServerID = this.lastPeerID;\n      this.peer.reconnect();\n    });\n\n    this.peer.on('close', () => {\n      this.connection = null;\n    });\n\n    this.peer.on('error', () => {\n      props.handleDisconnect();\n    });\n\n\n    this.peer.on('close', () => {\n      this.connection = null;\n    });\n  };\n\n  this.ready = () => {\n    props.setIsConnected(true);\n\n    this.connection.on('data', props.receive);\n\n    this.connection.on('close', () => {\n      this.connection = null;\n      props.handleDisconnect();\n    });\n  };\n\n  this.join = () => {\n    if (this.connection) this.connection.close();\n\n    this.connection = this.peer.connect(props.peerID, {\n      reliable: true,\n      serialization: 'json',\n    });\n\n    this.connection.on('open', () => {\n      props.setIsConnected(true);\n    });\n\n    this.connection.on('close', () => {\n      this.connection = null;\n      props.handleDisconnect();\n    });\n\n    this.connection.on('data', props.receive);\n  };\n\n  this.send = (data) => {\n    this.connection && this.connection.open && this.connection.send(data);\n  };\n}\n","import styled from 'styled-components';\n\nexport default styled.span`\n  border-bottom: 1px dotted #444;\n  cursor: pointer;\n\n  :hover {\n    border-bottom: 1px solid #aaa;\n  }\n`;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport RTC from '../scripts/RTC';\nimport TextButton from './TextButton';\n\nconst StyledSelect = styled.div`\n  width: 100%;\n  height: 100%;\n  flex-flow: column;\n  align-items: center;\n  justify-content: center;\n  font-size: 30px;\n  display: flex;\n\n  label {\n    text-align: center;\n    min-height: 1.2em;\n    line-height: 1.2em;\n    user-select: none;\n  }\n`;\n\nconst Output = styled.input.attrs({\n  type: `text`,\n})`\n  max-width: 90%;\n  min-height: 1.5em;\n  background-color: #000;\n  border: none;\n  border-radius: 0;\n  outline: none;\n  color: #ddd;\n  font-size: inherit;\n  font-weight: 300;\n  line-height: 1.5em;\n  text-align: center;\n`;\n\nconst Input = styled(Output)`\n  border-bottom: 1px solid #aaa;\n`;\n\nconst Button = styled.button`\n  margin: 16px 16px;\n  width: 108px;\n  height: 64px;\n  font-family: 'Material Icons';\n`;\n\nconst Select = (props) => {\n  const input = useRef(null);\n  const output = useRef(null);\n  const [changed, setChanged] = useState(false);\n  const [selected, setSelected] = useState(false);\n  const setRTC = (id, isClient = false, isInitialised = false) =>\n    props.setRTC({\n      interface: new RTC({\n        peerID: id,\n        setPeerID: props.setPeerID,\n        setIsConnected: props.setIsConnected,\n        setIsInitialised: props.setIsInitialised,\n        receive: props.receive,\n        handleDisconnect: props.handleDisconnect,\n      }),\n      isClient,\n      isInitialised,\n    });\n  const connect = (id = input.current.value) => id && id !== '' && id !== props.rtc.peerID && setRTC(id, true);\n  const handleKeyPress = (event) => { event.key === `Enter` && connect() };\n  const preventDefault = (event) => { event.preventDefault() };\n  const handleChange = () => setChanged(true);\n  const handleSelect = () => setSelected(true);\n  const handleClick = () => { connect() };\n\n  useEffect(\n    () => {\n      if (props.game.status !== `connect`) return;\n\n      if (props.rtc.interface === null) {\n        setRTC(props.rtc.peerID);\n      } else if (!props.rtc.isInitialised){\n        props.rtc.interface.init();\n        props.rtc.isClient && props.rtc.interface.join();\n      } else if (props.rtc.peerID && !selected) {\n        output.current.select();\n      }\n    },// eslint-disable-next-line\n    [props]\n  );\n\n  switch (props.game.status) {\n    case `choose`:\n      return (\n        <StyledSelect>\n          <label>select game type:</label>\n          <div>\n            <Button onClick={ () => props.selectType(true) }>&#xE7FD;&#xE8D4;&#xE7FD;</Button>\n            {/*<Button onClick={ () => props.selectType(false) }>&#xE7FD;&#xE8D4;&#xE30A;</Button>*/}\n          </div>\n        </StyledSelect>\n    );\n\n    case `connect`:\n      return (\n        <StyledSelect>\n          <label>share this text<br />with someone<br />you want to play:</label>\n          <Output ref={ output } onChange={ preventDefault } onSelect={ handleSelect } value={ props.rtc.peerID } />\n          <label>or paste text that<br />was shared to you:</label>\n          <Input ref={ input } onChange={ handleChange } onKeyPress={ handleKeyPress } />\n          <label>{ changed && <TextButton onClick={ handleClick }>connect</TextButton> }</label>\n        </StyledSelect>\n    );\n\n    default: return null;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  game: state.game,\n  rtc: state.rtc,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setRTC: (payload) => dispatch({ type: `SET_RTC`, payload }),\n  receive: (payload) => dispatch({ type: `RECEIVE`, payload }),\n  setPeerID: (payload) => dispatch({ type: `SET_PEER_ID`, payload }),\n  selectType: (network) => dispatch({ type: `SELECT_TYPE`, payload: network }),\n  setIsConnected: (payload) => dispatch({ type: 'SET_IS_CONNECTED', payload }),\n  setIsInitialised: (payload) => dispatch({ type: `SET_IS_INITIALISED`, payload }),\n  handleDisconnect: () => dispatch({ type: `RESET` }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Select);\n","import styled from 'styled-components';\n\nexport default styled.label`\n  display: flex;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: 200;\n  text-align: center;\n  user-select: none;\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport Sea from './Sea';\nimport Cell from './Cell';\nimport Label from './Label';\nimport TextButton from './TextButton';\n\nconst HintLabel = styled.label`\n  grid-row: 1 / span 2;\n  grid-column: 1 / span 10;\n  text-align: center;\n`;\n\nconst Confirm = styled(Label)`\n  grid-row: 10;\n  grid-column: 1 / span 10;\n  align-items: center;\n`;\n\nconst Ship = styled.div`\n  grid-column: 2 / span 8;\n  grid-row: ${ props => props.row };\n  display: grid;\n  grid-template: auto / repeat(8, 1fr);\n`;\n\nconst Deck = styled(Cell)`\n  grid-row-start: ${ props => props.row };\n  grid-column-start: ${ props => props.column };\n`;\n\nconst Times = styled(Cell)`\n  grid-row-start: ${ props => props.row };\n  grid-column-start: 7;\n  border: 0;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: 70% 70%;\n`;\n\nconst Number = styled(Cell)`\n  grid-row-start: ${ props => props.row };\n  grid-column-start: 8;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 0;\n  font-size: 30px;\n  font-weight: 200;\n  line-height: 30px;\n\n  @media screen and (min-width: 600px) and (min-height: 600px) {\n    font-size: 5vmin;\n    line-height: 4vmin;\n  }\n`;\n\nconst PlacingSea = styled(Sea)`\n  & > div:after {\n    grid-column-start: 1;\n    grid-row-start: 3;\n    display: ${ props => props.currentType === -1 ? `none` : `flex` };\n    align-items: center;\n    justify-content: center;\n    transform: translateY(${ props => props.currentType * 200 }%);\n    transition: transform .5s;\n    font-family: 'Material Icons';\n    font-size: 29px;\n    line-height: 29px;\n    content: '\\u{E315}';\n  }\n`;\n\nconst PlacingShip = ({ decks, row, number }) =>\n  <Ship row={ row }>\n    {\n      [...Array(decks).keys()].map(item =>\n        <Deck key={ `placing-deck-${ decks }-${ item }` } column={ item + 1 } place />\n      )\n    }\n    <Times times />\n    <Number>{ number }</Number>\n  </Ship>;\n\nconst Placing = (props) =>\n  <PlacingSea currentType={ props.sea.currentType }>\n    <HintLabel>\n      click on field to place ship manually<br />or place them <TextButton onClick={ props.random }>randomly</TextButton>\n    </HintLabel>\n    <PlacingShip decks={ 4 } row={ 3 } number={ props.sea.shipsToPlace.fourDecker } />\n    <PlacingShip decks={ 3 } row={ 5 } number={ props.sea.shipsToPlace.threeDecker } />\n    <PlacingShip decks={ 2 } row={ 7 } number={ props.sea.shipsToPlace.twoDecker } />\n    <PlacingShip decks={ 1 } row={ 9 } number={ props.sea.shipsToPlace.singleDecker } />\n    { props.game.status === `confirm` && <Confirm><TextButton onClick={ props.ready }>confirm and proceed</TextButton></Confirm> }\n  </PlacingSea>;\n\nconst mapStateToProps = (state) => ({\n  game: state.game,\n  sea: state.sea,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  ready: () => dispatch({ type: `READY` }),\n  random: () => dispatch({ type: `RANDOM` }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Placing);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport Sea from './Sea';\nimport Label from './Label';\nimport TextButton from './TextButton';\n\nconst Wait = styled(Label)`\n  grid-row: 4 / span 4;\n  grid-column: 1 / span 10;\n  align-items: center;\n  font-size: 25px;\n`;\n\nconst Result = styled(Wait)`\n  grid-row: 3 / span 3;\n  align-items: flex-start;\n`;\n\nconst Repeat = styled(Wait)`\n  grid-row: 6;\n  justify-content: space-around;\n`;\n\nconst Ready = styled(Wait)`\n  grid-row: 8;\n`;\n\nconst resultText = {\n  victory: `you win!`,\n  defeat: `you loose!`,\n};\n\nconst TextBlock = (props) => {\n  switch (props.game.status) {\n    case `defeat`:\n    case `victory`:\n      return (\n        <Sea>\n          <Result>\n            { resultText[props.game.status] }\n            <br/>\n            { !props.game.isAllyWantRepeat && `play another round?` }\n          </Result>\n          <Repeat>\n            {\n              props.game.isAllyWantRepeat\n                ? `waiting for yor opponent answer`\n                : [\n                  <TextButton key=\"yes\" onClick={ props.repeat }>yes</TextButton>,\n                  <TextButton key=\"no\" onClick={ props.reset }>no</TextButton>\n                ]\n            }\n          </Repeat>\n          { props.game.isEnemyWantRepeat && <Ready>your opponent said «yes»</Ready> }\n        </Sea>\n      );\n\n    case `wait`:\n      return (\n        <Sea>\n          <Wait>wait until opponent<br/>place their ships</Wait>\n        </Sea>\n      );\n\n    default:\n      return null;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  game: state.game,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  repeat: () => dispatch({ type: `REPEAT` }),\n  reset: () => dispatch({ type: `RESET` }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TextBlock);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Ally from './Ally';\nimport Enemy from './Enemy';\nimport Ocean from './Ocean';\nimport Select from './Select';\nimport Placing from './Placing';\nimport TextBlock from './TextBlock';\n\nconst Game = (props) => {\n  switch (props.status) {\n    case `choose`:\n    case `connect`:\n      return <Select />;\n\n    case `place`:\n    case `confirm`:\n      return (\n        <Ocean>\n          <Ally />\n          <Placing />\n        </Ocean>\n      );\n\n    case `victory`:\n    case `wait`:\n      return (\n        <Ocean>\n          <Ally />\n          <TextBlock />\n        </Ocean>\n      );\n\n    case `play`:\n      return (\n        <Ocean>\n          <Ally />\n          <Enemy />\n        </Ocean>\n      );\n\n    case `defeat`:\n      return (\n        <Ocean>\n          <TextBlock />\n          <Enemy />\n        </Ocean>\n      );\n\n    default:\n      return null;\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  status: state.game.status,\n});\n\nexport default connect(mapStateToProps)(Game);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Game from './Game';\n\nconst App = (props) => {\n  useEffect(\n    () => {\n      switch (props.game.status) {\n        case `connect`: {\n          if (props.rtc.isConnected) {\n            props.changeStatus(`place`);\n            props.setMove(props.rtc.isClient);\n          }\n          break;\n        }\n\n        case `place`: {\n          props.sea.shipsToPlace.total === 0 && props.changeStatus(`confirm`);\n          break;\n        }\n\n        case `confirm`: {\n          if (props.sea.shipsToPlace.total !== 0) {\n            props.changeStatus(`place`);\n            break;\n          }\n\n          props.game.isAllyReady && (\n            props.game.isEnemyReady\n              ? props.changeStatus(`play`)\n              : props.changeStatus(`wait`)\n          );\n          break;\n        }\n\n        case `wait`: {\n          props.game.isEnemyReady && props.changeStatus(`play`);\n          break;\n        }\n\n        case `play`: {\n          props.sea.feedback && props.send(props.sea.feedback);\n          break;\n        }\n\n        case `defeat`:\n        case `victory`: {\n          props.game.isAllyWantRepeat && props.game.isEnemyWantRepeat && props.newRound();\n          break;\n        }\n\n        default: break;\n      }\n    },\n    [props]\n  );\n\n  return <Game />;\n};\n\nconst mapStateToProps = (state) => ({\n  game: state.game,\n  rtc: state.rtc,\n  sea: state.sea,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  changeStatus: (status) => dispatch({ type: `CHANGE_STATUS`, payload: status }),\n  setMove: (payload) => dispatch({ type: `SET_MOVE`, payload }),\n  send: (payload) => dispatch({ type: `SEND`, payload }),\n  newRound: () => dispatch({ type: `NEW_ROUND` }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={ store }><Router><Route path='/' component={ App } /></Router></Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
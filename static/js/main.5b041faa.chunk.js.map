{"version":3,"sources":["../node_modules/peerjs/dist sync","actions/ready.js","actions/repeat.js","actions/setMove.js","actions/selectType.js","actions/changeStatus.js","actions/receiveReady.js","actions/receiveRepeat.js","reducers/game.js","scripts/getCoordinates.js","actions/send.js","actions/setRTC.js","actions/receive.js","actions/setPeerID.js","actions/clearMessage.js","actions/setIsConnected.js","actions/setIsInitialised.js","scripts/makeSea.js","scripts/getShip.js","scripts/countShips.js","scripts/makeDeck.js","scripts/removeDeck.js","scripts/isThereShip.js","actions/placeShip.js","scripts/isThereShipDiagonally.js","scripts/isThereShipInCross.js","scripts/shootAroundSankShip.js","actions/receiveFire.js","scripts/itSank.js","actions/sendVictory.js","scripts/makeSquadron.js","actions/clearFeedback.js","actions/randomPlacing.js","actions/receiveVictory.js","actions/receiveFeedback.js","reducers/sea.js","reducers/index.js","reducers/rtc.js","store.js","scripts/AI.js","components/Sea.js","components/Cell.js","scripts/isShipPlaced.js","components/Ally.js","components/Enemy.js","components/Ocean.js","scripts/RTC.js","components/Input.js","components/Button.js","components/Select.js","components/Placing.js","components/Modal.js","components/Game.js","components/App.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","state","isAllyReady","isAllyWantRepeat","move","action","status","payload","type","isEnemyReady","isEnemyWantRepeat","initialState","match","map","item","parseInt","message","data","getCoordinates","console","log","JSON","parse","stringify","waitingForFeedback","lastSent","lastReceived","peerID","isConnected","isInitialised","ten","Array","y","x","hit","miss","ship","sank","string","split","shipsToPlace","squadron","reduce","sum","length","a","b","count","deckToPlace","findNext","deck","coordinates","toStart","newState","pop","unshift","forEach","index","ally","countShips","splice","push","sea","thereIsShip","isThereShip","getShip","removeDeck","isThereShipDiagonally","thereIsShipInCross","filter","i","isThereShipInCross","newDeck","makeDeck","newSea","newShip","xsLength","ysLength","condition","head","shoot","feedback","itSank","allyShipsLeft","shootAroundSankShip","row","cell","h","_","shifts","getRandomCoordinates","direction","Math","floor","random","error","enemy","enemyShipsLeft","makeSea","makeSquadron","reducers","combineReducers","game","selectType","changeStatus","ready","repeat","setMove","receiveReady","receiveRepeat","rtc","interface","isClient","setRTC","send","clearMessage","receive","setPeerID","setIsConnected","setIsInitialised","clearFeedback","placeShip","randomPlacing","receiveFire","receiveFeedback","receiveVictory","sendVictory","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","fourDecker","threeDecker","twoDecker","singleDecker","total","currentType","AI","props","this","init","newGame","shootLog","lastShoot","directions","directionsStack","fireDelay","sendMessage","findLogIndex","findIndex","toString","randomDirectionsStack","array","indexOf","reverseDirection","findHitIndex","reduceRight","position","alreadyShoot","addShift","shift","randomStock","hasCoordinates","changeState","nextDirection","setTimeout","logIndex","Wrapper","styled","div","css","Content","children","Cell","last","isCompleted","completed","connect","dispatch","place","Sea","key","isShipPlaced","onClick","fire","RTC","lastPeerID","peer","Peer","connection","on","c","close","reconnect","handleDisconnect","join","reliable","serialization","open","blink","keyframes","Input","input","attrs","size","maxLength","Caret","caret","Placeholder","Background","onInput","readonly","submit","symbols","value","useRef","useState","setCaret","moveCaret","event","target","selectionEnd","useEffect","current","focus","inputProps","onChange","preventDefault","onKeyUp","onPaste","onKeyDown","ref","Button","button","autoFocus","className","text","undefined","substring","title_","Buttons","network","changePeerID","ShipsLeft","StyledDeck","isPlaced","isNext","Space","Deck","heap","Window","Text","reset","resultText","victory","defeat","Ocean","newRound","handleKeyPress","toLowerCase","document","removeEventListener","addEventListener","ReactDOM","render","path","component","App","getElementById"],"mappings":"wKAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,sWCRV,eAACC,GAAD,O,yVAAA,IACVA,EADU,CAEbC,aAAa,K,8NCFA,eAACD,GAAD,O,yVAAA,IACVA,EADU,CAEbE,kBAAkB,K,8NCFL,eAACF,GAAD,O,yVAAA,IACVA,EADU,CAEbG,MAAOH,EAAMG,Q,8NCFA,eAACH,EAAOI,GAAR,O,yVAAA,IACVJ,EADU,CAEbK,OAAQD,EAAOE,QAAP,kBACRC,KAAMH,EAAOE,QAAP,aACNH,MAAMC,EAAOE,SAAUN,EAAMG,Q,8NCJhB,eAACH,EAAOI,GAAR,O,yVAAA,IACVJ,EADU,CAEbK,OAAQD,EAAOE,W,8NCFF,eAACN,GAAD,O,yVAAA,IACVA,EADU,CAEbQ,cAAc,K,8NCFD,eAACR,GAAD,O,yVAAA,IACVA,EADU,CAEbS,mBAAmB,KC8BfC,EAAe,eAACL,EAAD,gEAAoBF,EAApB,8DAAsC,CACzDI,KAAM,KACNN,aAAa,EACbO,cAAc,EACdN,kBAAkB,EAClBO,mBAAmB,EACnBJ,SACAF,SC9Ba,WAACJ,GAAD,OAAQA,EAAGY,MAAM,SAASC,KAAI,SAAAC,GAAI,OAAIC,SAASD,O,yjBCP/C,eAACb,EAAOI,GACrB,IAAMW,EAAU,SAAAX,EAAOE,QAAQC,KAC3B,CAAEA,KAAK,OAASS,KAAMC,EAAeb,EAAOE,QAAQU,OADxC,KAEPZ,EAAOE,SAIhB,OAFAY,QAAQC,IAAR,aAA0BC,KAAKC,MAAMD,KAAKE,UAAUP,KAE7C,KACFf,EADL,CAEEe,UACAQ,mBAAoB,SAAAnB,EAAOE,QAAQC,KACnCiB,SAAU,SAAApB,EAAOE,QAAQC,KAAkBH,EAAOE,QAAQU,KAAOhB,EAAMwB,Y,8NCb5D,eAACxB,EAAOI,GAAR,O,yVAAA,IACVJ,EADU,GAEVI,EAAOE,U,8NCFG,eAACN,EAAOI,GAGrB,OAFAc,QAAQC,IAAR,aAA0BC,KAAKC,MAAMD,KAAKE,UAAUlB,EAAOE,W,yVAEpD,IACFN,EADL,CAEEuB,oBAAoB,EACpBE,aAAc,SAAArB,EAAOE,QAAQC,KAAf,eAA0CH,EAAOE,QAAQU,KAAK,GAA9D,YAAsEZ,EAAOE,QAAQU,KAAK,GAA1F,SAAuGhB,EAAMyB,gB,8NCNhH,eAACzB,EAAOI,GAAR,O,yVAAA,IACVJ,EADU,CAEb0B,OAAQtB,EAAOE,W,8NCFF,eAACN,GAAD,O,yVAAA,IAAiBA,EAAjB,CAAwBe,QAAS,Q,8NCAjC,eAACf,EAAOI,GAAR,O,yVAAA,IACVJ,EADU,CAEb2B,YAAavB,EAAOE,W,8NCFP,eAACN,EAAOI,GAAR,O,yVAAA,IACVJ,EADU,CAEb4B,cAAexB,EAAOE,W,OCFT,WAACC,GACd,IAAMsB,EAAG,YAAOC,MAAM,IAAInC,QAE1B,OAAOkC,EAAIjB,KAAI,SAAAmB,GAAC,OACdF,EAAIjB,KAAI,SAAAoB,GAAC,MACN,CACCjC,GAAG,QAAD,OAAWiC,EAAX,YAAkBD,EAAlB,YAAyBxB,GAC3B0B,KAAK,EACLC,MAAM,EACNC,MAAM,EACNC,MAAM,U,OCLC,WAACC,GAAD,OAAYA,EAAOC,MAAP,KAAkB1B,KAAI,SAAAC,GAAI,OAAIC,SAASD,O,yjBCGlE,IAgBe,WAACb,GACd,IAAMuC,EAAevC,EAAMwC,SAASC,QAAO,SAACC,EAAKnC,GAAN,OAAemC,EAjB9C,SAACnC,GAAD,OAAUA,EACrBK,KAAI,SAAAC,GAAI,OACK,OAAZA,EAAK,GACD,EACgB,IAAhBA,EAAK8B,OACL,EACA9B,EAAK4B,QAAO,SAACG,EAAGC,GAAJ,OACN,IAAND,EACI,EACM,OAANC,EACE,EACA,QAGXJ,QAAO,SAACG,EAAGC,GAAJ,OAAUD,EAAIC,KAG0CC,CAAMvC,KAAO,GACzEwC,EAAW,KAAQ/C,EAAM+C,aAE7BC,EACE,IAAK,IAAIzC,EAAO,EAAGA,EAAOP,EAAMwC,SAASG,OAAQpC,IAC/C,IAAK,IAAI4B,EAAO,EAAGA,EAAOnC,EAAMwC,SAASjC,GAAMoC,OAAQR,IACrD,IAAK,IAAIc,EAAO,EAAGA,EAAOjD,EAAMwC,SAASjC,GAAM4B,GAAMQ,OAAQM,IAC3D,GAAyC,OAArCjD,EAAMwC,SAASjC,GAAM4B,GAAMc,GAAgB,CAC7CF,EAAc,CAAExC,OAAM4B,OAAMc,QAC5B,MAAMD,EAMhB,OAAO,KACFhD,EADL,CAEEuC,eACAQ,iB,8NCpCW,eAACxC,EAAM4B,EAAMc,EAAMC,EAAalD,EAAOmD,GACpD,IAAMC,E,yVAAQ,IAAQpD,GAatB,OAXImD,GACFC,EAASZ,SAASjC,GAAM4B,GAAMkB,MAC9BD,EAASZ,SAASjC,GAAM4B,GAAMmB,QAAQJ,IAEtCE,EAASZ,SAASjC,GAAM4B,GAAMc,GAAQC,EAGxCE,EAASZ,SAASjC,GAAM4B,GAAMoB,SAAQ,SAAC1C,EAAM2C,GAC3C3C,IAASuC,EAASK,KAAK5C,EAAK,IAAIA,EAAK,IAAIsB,KAAhC,UAA2C5B,EAA3C,YAAqD4B,EAArD,YAA+DqB,OAGnEE,EAAWN,I,8NCbL,gBAAC7C,EAAM4B,EAAMc,EAAMC,EAAalD,GAC7C,IAAMoD,E,yVAAQ,IAAQpD,GAUtB,OARAoD,EAASZ,SAASjC,GAAM4B,GAAMwB,OAAOV,EAAM,GAC3CG,EAASZ,SAASjC,GAAM4B,GAAMyB,KAAK,MAEnCR,EAASK,KAAKP,EAAY,IAAIA,EAAY,IAAIf,MAAO,EACrDiB,EAASZ,SAASjC,GAAM4B,GAAMoB,SAAQ,SAAC1C,EAAM2C,GAC3C3C,IAASuC,EAASK,KAAK5C,EAAK,IAAIA,EAAK,IAAIsB,KAAhC,UAA2C5B,EAA3C,YAAqD4B,EAArD,YAA+DqB,OAGnEE,EAAWN,ICfL,YAACS,EAAKX,GAAN,OAAsBW,EAAIX,EAAY,IAAIA,EAAY,IAAIf,M,+NCI1D,gBAACnC,EAAOI,GACrB,IAAMgD,E,2VAAQ,IAAQpD,GAChBkD,EAAcjC,EAAeb,EAAOE,SAKpCwD,EAAcC,GAAYX,EAASK,KAAMP,GAC/C,GAAIY,EAAa,OAKYE,EAAQF,GALpB,mBAKRvD,EALQ,KAKF4B,EALE,KAKIc,EALJ,KAMf,OAAiB,IAATA,GAAeG,EAASZ,SAASjC,GAAM4B,GAAMc,EAAO,GAExDG,EADAa,GAAW1D,EAAM4B,EAAMc,EAAMC,EAAaE,GAQhD,GCnBa,SAACS,EAAKX,GAAN,OAEXW,EAAIX,EAAY,GAAK,KAEjBW,EAAIX,EAAY,GAAK,GAAGA,EAAY,GAAK,IACzCW,EAAIX,EAAY,GAAK,GAAGA,EAAY,GAAK,GAAGf,MAI5C0B,EAAIX,EAAY,GAAK,GAAGA,EAAY,GAAK,IACzCW,EAAIX,EAAY,GAAK,GAAGA,EAAY,GAAK,GAAGf,OAIhD0B,EAAIX,EAAY,GAAK,KAEjBW,EAAIX,EAAY,GAAK,GAAGA,EAAY,GAAK,IACzCW,EAAIX,EAAY,GAAK,GAAGA,EAAY,GAAK,GAAGf,MAI5C0B,EAAIX,EAAY,GAAK,GAAGA,EAAY,GAAK,IACzCW,EAAIX,EAAY,GAAK,GAAGA,EAAY,GAAK,GAAGf,MDJpB+B,CAAsBd,EAASK,KAAMP,GACxC,OAAOE,EAKlC,IAAMe,EExBO,SAACN,EAAKX,GAAN,MAAsB,CAEjCW,EAAIX,EAAY,GAAK,IACrBW,EAAIX,EAAY,GAAK,GAAGA,EAAY,KACpCW,EAAIX,EAAY,GAAK,GAAGA,EAAY,IAAIf,KAGxC0B,EAAIX,EAAY,GAAK,IACrBW,EAAIX,EAAY,GAAK,GAAGA,EAAY,KACpCW,EAAIX,EAAY,GAAK,GAAGA,EAAY,IAAIf,KAGxC0B,EAAIX,EAAY,IAAIA,EAAY,GAAK,IACrCW,EAAIX,EAAY,IAAIA,EAAY,GAAK,GAAGf,KAGxC0B,EAAIX,EAAY,IAAIA,EAAY,GAAK,IACrCW,EAAIX,EAAY,IAAIA,EAAY,GAAK,GAAGf,MAE1CiC,QAAO,SAAAC,GAAC,OAAIA,KFKeC,CAAmBlB,EAASK,KAAMP,GAC7D,GAAkC,IAA9BiB,EAAmBxB,OAAc,CAQnC,IARmC,MAOdwB,EAAmB,GAAG7B,MAAtB,KAAiC1B,KAAI,SAAAC,GAAI,OAAIC,SAASD,MAPxC,mBAO5BN,EAP4B,KAOtB4B,EAPsB,KAQ1BoC,EAAU,EAAGA,EAAUnB,EAASZ,SAASjC,GAAM4B,GAAMQ,OAAQ4B,IACpE,GAA+C,OAA3CnB,EAASZ,SAASjC,GAAM4B,GAAMoC,GAAmB,CACnD,IAAMpB,EACJD,EAAY,GAAKE,EAASZ,SAASjC,GAAM4B,GAAM,GAAG,IAClDe,EAAY,GAAKE,EAASZ,SAASjC,GAAM4B,GAAM,GAAG,GAEpD,OAAOqC,EAASjE,EAAM4B,EAAMoC,EAASrB,EAAaE,EAAUD,GAIhE,OAAOC,EAMT,IAAK,IAAIiB,EAAI,EAAGA,EAAIjB,EAASZ,SAASY,EAASL,YAAYxC,MAAMoC,OAAQ0B,IAAK,CAC5E,IAAMlC,EAAOiB,EAASZ,SAASY,EAASL,YAAYxC,MAAM8D,GAE1D,KADmBlC,EAAKiC,QAAO,SAAAC,GAAC,OAAIA,KAAG1B,SAAWR,EAAKQ,QAQvD,OAAmB,OAAZR,EAAK,GACRqC,EAASpB,EAASL,YAAYxC,KAAM8D,EAAG,EAAGnB,EAAaE,GAAU,GACjEA,EAGN,OAAOA,GGvEM,YAACS,EAAK1B,GACnB,IAAMsC,EAAM,YAAOZ,GACba,EAAO,YAAOvC,GAFQ,EAIoB,IAAnBuC,EAAQ/B,OACjC,CAAC,EAAG,GACJ+B,EAAQ,GAAG,GAAKA,EAAQ,GAAG,KAAO,EAChC,CAACA,EAAQ/B,OAAS,EAAG,GACrB,CAAC,EAAG+B,EAAQ/B,OAAS,GARC,mBAIrBgC,EAJqB,KAIXC,EAJW,KAiC5B,OANA,YAAI9C,MAAM8C,GAAUjF,QAAQ4D,SAAQ,SAAAxB,GAClC,YAAID,MAAM6C,GAAUhF,QAAQ4D,SAAQ,SAAAvB,IAlBpB,SAACA,EAAGD,GAAJ,OACG,IAAnB2C,EAAQ/B,SACI,IAANX,GAAiB,IAAND,GACb2C,EAAQ,GAAG,GAAKA,EAAQ,GAAG,KAAO,IAC9B1C,EAAI,GAAKA,EAAI0C,EAAQ/B,OAAS,GAAW,IAANZ,KACnCA,EAAI,GAAKA,EAAI2C,EAAQ/B,OAAS,GAAW,IAANX,IAczC6C,CAAU7C,EAAGD,IAZH,SAACC,EAAGD,GAChB,IAAM+C,EAAOJ,EAAQ,GAEnBD,EAAO1C,EAAI,EAAI+C,EAAK,KACpBL,EAAO1C,EAAI,EAAI+C,EAAK,IAAI9C,EAAI,EAAI8C,EAAK,MAErCL,EAAO1C,EAAI,EAAI+C,EAAK,IAAI9C,EAAI,EAAI8C,EAAK,IAAI5C,MAAO,GAM7B6C,CAAM/C,EAAGD,SAIzB0C,G,+NCjCM,gBAACzE,EAAOI,GACrB,IAAI4E,EACEhE,EAAO,GACPoC,E,2VAAQ,IAAQpD,GAChBkD,EAAW,YAAO9C,EAAOE,QAAQU,MACjC8C,EAAcC,GAAYX,EAASK,KAAMP,GAE/C,GAAIY,EAAa,CACfV,EAASK,KAAKP,EAAY,IAAIA,EAAY,IAAIjB,KAAM,EADrC,MAEM+B,EAAQF,GAFd,mBAERvD,EAFQ,KAEF4B,EAFE,KAGf,GCfW,SAAC5B,EAAM4B,EAAMnC,GAE1B,OAAOA,EAAMwC,SAASjC,GAAM4B,GAAMM,QADR,SAACG,EAAGyB,GAAJ,OAAUrE,EAAMyD,KAAKY,EAAE,IAAIA,EAAE,IAAIpC,KAAOW,KACN,GDatDqC,CAAO1E,EAAM4B,EAAMiB,GAAW,CAEhC,GADAA,EAAS8B,eAAiB,EACK,IAA3B9B,EAAS8B,cAEX,OADA9B,EAAS4B,SAAW,CAAEzE,KAAK,UACpB6C,EAGTA,EAASZ,SAASjC,GAAM4B,GAAMoB,SAAQ,SAAA1C,GACpCuC,EAASK,KAAK5C,EAAK,IAAIA,EAAK,IAAIuB,MAAO,EACvCpB,EAAK4C,KAAK/C,MAGZuC,EAASK,KAAO0B,GAAoB/B,EAASK,KAAMzC,GACnDgE,EAAQ,YAERA,EAAQ,WAGVA,EAAQ,OACR5B,EAASK,KAAKP,EAAY,IAAIA,EAAY,IAAIhB,MAAO,EAKvD,OAFgB,IAAhBlB,EAAK2B,QAAgB3B,EAAK4C,KAAKV,GAC/BE,EAAS4B,SAAW,CAAEzE,KAAK,WAAaS,OAAMgE,YACvC5B,G,+NE/BM,gBAACpD,GAAD,O,2VAAA,IACVA,EADU,CAEbgF,SAAU,CACRzE,KAAK,UACLS,KAAK,YACAhB,EAAMyD,KAAK7C,KAAI,SAAAwE,GAAG,OACnBA,EAAIxE,KAAI,SAAAyE,GAAI,OACVA,EAAKnD,KACD,EACAmD,EAAKjD,KACH,EACAiD,EAAKpD,IACH,EACAoD,EAAKlD,KACH,EACA,aCVL,qBACb,YAAIL,MAAM,GAAGnC,QAAQiB,KAAI,SAAA0E,GAAC,OACxB,YAAIxD,MAAMwD,EAAI,IAAI1E,KAAI,SAAA2E,GAAC,OACrB,YAAIzD,MAAM,EAAIwD,IAAI1E,KAAI,SAAA2E,GAAC,OACrB,e,+NCjBO,gBAACvF,GAAD,O,2VAAA,IAAiBA,EAAjB,CAAwBgF,SAAU,Q,6jBCEjD,IAAMQ,GAAS,CACb,CACE,EAAE,EAAG,GACL,CAAC,GAAI,IAEP,CACE,EAAE,EAAG,GACL,CAAC,GAAI,IAEP,CACE,EAAE,EAAG,GACL,CAAC,GAAI,IAEP,CACE,CAAC,EAAG,GACJ,CAAC,EAAG,KAmEO,YAACxF,GACd,IAAMoD,EAAQ,MAAQpD,GAEtB,IACIoD,EAASZ,SAASe,SAAQ,SAACgC,EAAGhF,GAC5B6C,EAASZ,SAASjC,GAAMgD,SAAQ,SAACgC,EAAGpD,GAAU,IAAD,EApExB,SAAvBsD,EAAwBzF,EAAOO,GACnC,IAAM6C,EAAQ,MAAQpD,GAWhB0F,EAAYC,KAAKC,MAAMD,KAAKE,SAAW,IACvC3C,EAAc,CAClByC,KAAKC,MAAMD,KAAKE,UAAY,GAAKL,GAAOjF,GAAMmF,GAAW,KACzDC,KAAKC,MAAMD,KAAKE,UAAY,GAAKL,GAAOjF,GAAMmF,GAAW,MAG3D,IACE,IAAK,IAAIrB,GAAK,EAAGA,GAAKjB,EAASZ,SAASjC,GAAM,GAAGoC,OAAS,EAAG0B,IAC3D,GAEkB,IAAdqB,GACAtC,EAASK,KAAKP,EAAY,GAAKmB,KAE3BjB,EAASK,KAAKP,EAAY,GAAKmB,GAAGnB,EAAY,GAAK,IACnDE,EAASK,KAAKP,EAAY,GAAKmB,GAAGnB,EAAY,GAAK,GAAGf,MAEtDiB,EAASK,KAAKP,EAAY,GAAKmB,GAAGnB,EAAY,KAC9CE,EAASK,KAAKP,EAAY,GAAKmB,GAAGnB,EAAY,IAAIf,MAElDiB,EAASK,KAAKP,EAAY,GAAKmB,GAAGnB,EAAY,GAAK,IACnDE,EAASK,KAAKP,EAAY,GAAKmB,GAAGnB,EAAY,GAAK,GAAGf,OAI5C,IAAduD,IAEItC,EAASK,KAAKP,EAAY,GAAK,IAC/BE,EAASK,KAAKP,EAAY,GAAK,GAAGA,EAAY,GAAKmB,IACnDjB,EAASK,KAAKP,EAAY,GAAK,GAAGA,EAAY,GAAKmB,GAAGlC,MAEtDiB,EAASK,KAAKP,EAAY,IAAIA,EAAY,GAAKmB,IAC/CjB,EAASK,KAAKP,EAAY,IAAIA,EAAY,GAAKmB,GAAGlC,MAElDiB,EAASK,KAAKP,EAAY,GAAK,IAC/BE,EAASK,KAAKP,EAAY,GAAK,GAAGA,EAAY,GAAKmB,IACnDjB,EAASK,KAAKP,EAAY,GAAK,GAAGA,EAAY,GAAKmB,GAAGlC,MAK5D,OAAOsD,EAAqBrC,EAAU7C,GAG1C,SAAqB,IAAZQ,EAAW,EAAXA,QAET,OADAG,QAAQ4E,MAAM/E,GACP,GAGT,MAAO,CAAEmC,cAAawC,aASqBD,CAAqBrC,EAAU7C,GAA1D2C,EADmC,EACnCA,YAAawC,EADsB,EACtBA,UACrB,IAAKxC,EAAa,MAAM,IAAIzD,MAAJ,oDAExB2D,EAASZ,SAASjC,GAAM4B,GAAQiB,EAASZ,SAASjC,GAAM4B,GAAMvB,KAAI,SAAC2E,EAAG/B,GAAJ,OAClD,IAAdkC,EACI,CAACxC,EAAY,GAAKM,EAAON,EAAY,IACrC,CAACA,EAAY,GAAIA,EAAY,GAAKM,MAGxCJ,EAASZ,SAASjC,GAAM4B,GAAMoB,SAAQ,SAAC1C,EAAMoC,GAC3CG,EAASK,KAAK5C,EAAK,IAAIA,EAAK,IAAIsB,KAAhC,UAA2C5B,EAA3C,YAAqD4B,EAArD,YAA+Dc,YAIvE,SAAqB,IAAZlC,EAAW,EAAXA,QACTG,QAAQ4E,MAAM/E,GAGhB,OAAO2C,EAAWN,I,+NCpGL,gBAACpD,EAAOI,GAAR,O,2VAAA,IACVJ,EADU,CAEb+F,MAAM,YACD3F,EAAOE,QAAQU,KAAKJ,KAAI,SAACwE,EAAKrD,GAAN,OACzBqD,EAAIxE,KAAI,SAACyE,EAAMrD,GAAP,MAAc,CACpBjC,GAAG,QAAD,OAAWiC,EAAX,YAAkBD,EAAlB,UACFG,KAAe,IAATmD,EACNjD,KAAe,IAATiD,EACNpD,IAAc,IAAToD,GAAuB,IAATA,EACnBlD,KAAe,IAATkD,GAAuB,IAATA,GAAuB,IAATA,a,+NCf3B,gBAACrF,EAAOI,GACrB,IAAMgD,E,2VAAQ,IAAQpD,GAChBmC,EAAI,YAAO/B,EAAOE,QAAQU,MAGhC,OAFiBZ,EAAOE,QAAQ0E,UAG9B,IAAI,OACF5B,EAAS2C,MAAM5D,EAAK,GAAG,IAAIA,EAAK,GAAG,IAAID,MAAO,EAC9C,MAGF,IAAI,MACFkB,EAAS2C,MAAM5D,EAAK,GAAG,IAAIA,EAAK,GAAG,IAAIA,MAAO,EAC9CiB,EAAS2C,MAAM5D,EAAK,GAAG,IAAIA,EAAK,GAAG,IAAIF,KAAM,EAC7C,MAGF,IAAI,OASF,GARAE,EAAKoB,SAAQ,SAAA1C,GACXuC,EAAS2C,MAAMlF,EAAK,IAAIA,EAAK,IAAIoB,KAAM,EACvCmB,EAAS2C,MAAMlF,EAAK,IAAIA,EAAK,IAAIsB,MAAO,EACxCiB,EAAS2C,MAAMlF,EAAK,IAAIA,EAAK,IAAIuB,MAAO,KAE1CgB,EAAS2C,MAAQZ,GAAoB/B,EAAS2C,MAAO5D,GACrDiB,EAAS4C,gBAAkB,EAEK,IAA5B5C,EAAS4C,eAEX,OADA5C,EAAS4B,SAAW,CAAEzE,KAAK,UAAYS,KAAK,YAAKoC,EAASK,OACnDL,EASb,OAAOA,G,6jBCjBT,IAAM1C,GAAe,iBAAO,CAC1B+C,KAAMwC,EAAQ,QACdF,MAAOE,EAAQ,SACfzD,SAAU0D,KACV3D,aAAc,GACdQ,YAAa,CACXxC,KAAM,EACN4B,KAAM,EACNc,KAAM,GAERiC,cAAe,GACfc,eAAgB,GAChBhB,SAAU,OCvBGmB,GANEC,YAAgB,CAC/BC,K5BoCa,WAAqC,IAApCrG,EAAmC,uDAA3BU,IAAgBN,EAAW,uCACjD,OAAQA,EAAOG,MACb,IAAI,cACF,OAAO+F,EAAWtG,EAAOI,GAE3B,IAAI,gBACF,OAAOmG,EAAavG,EAAOI,GAE7B,IAAI,QACF,OAAOoG,EAAMxG,GAEf,IAAI,SACF,OAAOyG,EAAOzG,GAEhB,IAAI,OACF,OAAQI,EAAOE,QAAQC,MACrB,IAAI,WACF,MAAO,SAAAH,EAAOE,QAAQ0E,SAClB0B,EAAQ1G,GACRA,EAEN,IAAI,UACF,OAAOuG,EAAavG,EAAO,CAAEM,QAAQ,YAEvC,QACE,OAAON,EAIb,IAAI,UACF,OAAQI,EAAOE,QAAQC,MACrB,IAAI,QACF,OAAOoG,EAAa3G,GAEtB,IAAI,SACF,OAAO4G,EAAc5G,GAEvB,IAAI,WACF,MAAO,SAAAI,EAAOE,QAAQ0E,SAClB0B,EAAQ1G,GACRA,EAEN,IAAI,UACF,OAAOuG,EAAavG,EAAO,CAAEM,QAAQ,WAEvC,QACE,OAAON,EAIb,IAAI,WACF,OAAOI,EAAOE,QACVoG,EAAQ1G,GACRA,EAEN,IAAI,QACF,OAAOU,IAET,IAAI,YACF,OAAOA,EAAa,QAAwB,QAAfV,EAAMO,OAAkBP,EAAMG,MAE7D,QACE,OAAOH,I4BjGX6G,ICsBa,WAAqC,IAApC7G,EAAmC,uDAZtB,CAC3B0B,OAAO,GACPX,QAAS,KACT+F,UAAW,KACXC,UAAU,EACVpF,aAAa,EACbC,eAAe,EACfL,oBAAoB,EACpBC,SAAU,KACVC,aAAc,MAGwBrB,EAAW,uCACjD,OAAQA,EAAOG,MACb,IAAI,UACF,OAAOyG,EAAOhH,EAAOI,GAEvB,IAAI,OACF,OAAO6G,EAAKjH,EAAOI,GAErB,IAAI,gBACF,OAAO8G,EAAalH,GAEtB,IAAI,QACF,OAAOiH,EAAKjH,EAAO,CAAEM,QAAS,CAAEC,KAAK,WAEvC,IAAI,SACF,OAAO0G,EAAKjH,EAAO,CAAEM,QAAS,CAAEC,KAAK,YAEvC,IAAI,UACF,OAAO4G,EAAQnH,EAAOI,GAExB,IAAI,cACF,OAAOgH,EAAUpH,EAAOI,GAE1B,IAAI,mBACF,OAAOiH,EAAerH,EAAOI,GAE/B,IAAI,qBACF,OAAOkH,EAAiBtH,EAAOI,GAEjC,IAAI,QACF,MA1CuB,CAC3BsB,OAAO,GACPX,QAAS,KACT+F,UAAW,KACXC,UAAU,EACVpF,aAAa,EACbC,eAAe,EACfL,oBAAoB,EACpBC,SAAU,KACVC,aAAc,MAmCZ,QAAS,OAAOzB,IDrDlB6D,ID6Ba,WAAqC,IAApC7D,EAAmC,uDAA3BU,KAAgBN,EAAW,uCACjD,OAAQA,EAAOG,MACb,IAAI,OACF,MACE,aAAAH,EAAOE,QAAQC,MACf,WAAAH,EAAOE,QAAQC,MACf,YAAAH,EAAOE,QAAQC,KAEbgH,GAAcvH,GACdA,EAEN,IAAI,aACF,OAAOwH,GAAUxH,EAAOI,GAE1B,IAAI,SACF,OAAOqH,GAAc,MAAKzH,EAAN,CAAayD,KAAMwC,EAAQ,QAASzD,SAAU0D,QAEpE,IAAI,UACF,OAAQ9F,EAAOE,QAAQC,MACrB,IAAI,OACF,OAAOmH,GAAY1H,EAAOI,GAE5B,IAAI,WACF,OAAOuH,GAAgB3H,EAAOI,GAEhC,IAAI,UACF,OAAOwH,GAAe5H,EAAOI,GAE/B,IAAI,SACF,OAAOyH,GAAY7H,EAAOI,GAE5B,QACE,OAAOJ,EAIb,IAAI,QACJ,IAAI,YACF,OAAOU,KAET,QACE,OAAOV,MG1EP8H,GAAmBC,OAAOC,sCAAwCC,IAQzDC,GAPDC,YACZhC,GACA2B,GACEM,YAAgBC,OC+Bd5D,GAAS,iBAAO,CACpBhB,KAAMwC,EAAQ,QACdF,MAAOE,EAAQ,SACfzD,SAAU0D,KACV3D,aAAc,CACZ+F,WAAY,EACZC,YAAa,EACbC,UAAW,EACXC,aAAc,EACdC,MAAO,IAETC,YAAa,EACbzD,cAAe,GACfc,eAAgB,GAChBhB,SAAU,OAGG,SAAS4D,GAAGC,GAAQ,IAAD,OAChCC,KAAKC,KAAO,WAAqB,IAApBC,IAAmB,yDAC9B,EAAKhJ,MAAQ,EACb,EAAKiJ,SAAW,GAChB,EAAKC,UAAY,KACjB,EAAKC,WAAa,CAAC,KAAD,uBAClB,EAAKC,gBAAkB,KACvB,EAAKvF,IAAM4D,GAAchD,MACzB,EAAK4E,UAAY,IACjBL,GAAWH,EAAMxB,gBAAe,IAGlCyB,KAAKQ,YAAcT,EAAM1B,QAEzB2B,KAAKS,aAAe,SAAC1I,GAAD,OAClB,EAAKoI,SAASO,WAAW,qBAAGnE,KAAgBoE,aAAe5I,EAAK4I,eAElEX,KAAKY,sBAAwB,kBAC3B,YAAI5H,MAAM,IAAIW,QAAO,SAAAkH,GAEnB,IADA,IAAI9I,EAAO8E,KAAKC,MAAsB,EAAhBD,KAAKE,WACK,IAAzB8D,EAAMC,QAAQ/I,IACnBA,EAAO8E,KAAKC,MAAsB,EAAhBD,KAAKE,UAEzB,MAAM,GAAN,mBAAW8D,GAAX,CAAkB9I,MACjB,IAAID,KAAI,SAAAC,GAAI,OAAI,EAAKsI,WAAWtI,OAErCiI,KAAKe,iBAAmB,kBACrB,EAAKV,WAAWS,QAAQ,EAAKR,gBAAgB,IAAM,GAAK,IAAM,EAC3D,EAAKD,WAAW,EAAKA,WAAWS,QAAQ,EAAKR,gBAAgB,IAAM,GACnE,EAAKD,WAAW,EAAKA,WAAWS,QAAQ,EAAKR,gBAAgB,IAAM,IAEzEN,KAAKgB,aAAe,kBAClB,EAAKb,SAASc,aAAY,SAACC,EAAUnJ,EAAM2C,GAAjB,MACtB,QAAA3C,EAAKmE,YACa,IAAdgF,GAAmBA,EAAWxG,IAAU,GACtCA,EAEFwG,KACH,IAEPlB,KAAKmB,aAAe,SAAC/G,GAAD,OACjB,EAAKW,IAAIkC,MAAM7C,EAAY,MAC3B,EAAKW,IAAIkC,MAAM7C,EAAY,IAAIA,EAAY,KAC5C,EAAKW,IAAIkC,MAAM7C,EAAY,IAAIA,EAAY,IAAIf,MAC/C,EAAK0B,IAAIkC,MAAM7C,EAAY,IAAIA,EAAY,IAAIhB,MAEjD4G,KAAKoB,SAAW,WAASxE,EAAWyE,GAAW,IAAD,mBAA5BnI,EAA4B,KAAzBD,EAAyB,KAC5C,OAAQ2D,GACN,IAAI,KACF,MAAO,CAAC1D,EAAGD,EAAIoI,GAEjB,IAAI,OACF,MAAO,CAACnI,EAAGD,EAAIoI,GAEjB,IAAI,OACF,MAAO,CAACnI,EAAImI,EAAOpI,GAErB,IAAI,QACF,MAAO,CAACC,EAAImI,EAAOpI,GAErB,QACE,SAIN+G,KAAKrD,qBAAuB,WAS1B,IARA,IAAM2E,EAAc,GAKdC,EAAiB,SAACV,EAAOzG,GAAR,OACrByG,EAAMH,WAAU,SAAAnF,GAAC,OAAIA,EAAEoF,aAAevG,EAAYuG,eAAe,KAEtD,CACX,IAAMvG,EARqB,CAC3ByC,KAAKC,MAAsB,GAAhBD,KAAKE,UAChBF,KAAKC,MAAsB,GAAhBD,KAAKE,WAOhB,IAAIwE,EAAeD,EAAalH,GAAhC,CAIA,IAAI,EAAK+G,aAAa/G,GAItB,OAAOA,EAHLkH,EAAYxG,KAAKV,MAOvB4F,KAAK/D,MAAQ,WACX,OAAQ,EAAK/E,OACX,KAAK,EACH,EAAKkJ,UAAY,EAAKzD,uBACtB,MAGF,KAAK,EACH,IAAMxD,EAAM,EAAK6H,eAOjB,GAN6B,OAAzB,EAAKV,gBACP,EAAKA,gBAAkB,EAAKM,wBAE5B,EAAKN,gBAAgB9F,UAGa,IAAhC,EAAK8F,gBAAgBzG,OAGvB,OAFA,EAAKyG,gBAAkB,KACvB,EAAKkB,YAAL,QACO,EAAKvF,QAGd,IAAMwF,EAAgB,EAAKnB,gBAAgB,GACrClG,EAAc,EAAKgH,SAAS,EAAKjB,SAAShH,GAAKoD,KAAMkF,EAAe,GAE1E,GACE,EAAKN,aAAa/G,IAClBA,EAAY,GAAK,GACjBA,EAAY,GAAK,GACjBA,EAAY,GAAK,GACjBA,EAAY,GAAK,EAKjB,OAHA,EAAKkG,gBAAgBe,QAGd,EAAKpF,QAGd,EAAKmE,UAAYhG,EAEjB,MAGF,KAAK,EACH,IAAMqH,EAAgB,EAAKnB,gBAAgB,GACrClG,EAAc,EAAKgH,SAAS,EAAKhB,UAAWqB,EAAe,GAEjE,GACE,EAAKN,aAAa/G,IAClBA,EAAY,GAAK,GACjBA,EAAY,GAAK,GACjBA,EAAY,GAAK,GACjBA,EAAY,GAAK,EAGjB,OADA,EAAKoH,YAAL,QACO,EAAKvF,QAGd,EAAKmE,UAAYhG,EACjB,MAGF,KAAK,EAKH,IAJA,IAAMqH,EAAgB,EAAKV,mBACrB5H,EAAM,EAAK6H,eACb5G,EAAc,EAAKgH,SAAS,EAAKjB,SAAShH,GAAKoD,KAAMkF,EAAe,GAEjE,EAAKN,aAAa/G,IACvBA,EAAc,EAAKgH,SAAShH,EAAaqH,EAAe,GAG1D,EAAKrB,UAAYhG,EACjB,EAAKkG,gBAAkB,CAACmB,GACxB,MAGF,QACE,OAGJ,EAAKtB,SAASrF,KAAK,CAAEyB,KAAM,EAAK6D,YAChCsB,YAAW,WACT,EAAKlB,YAAY,CAAE/I,KAAK,OAASS,KAAM,EAAKkI,cAC3C,EAAKG,YAGVP,KAAKwB,YAAc,SAACtF,GAClB,OAAQ,EAAKhF,OACX,KAAK,EACK,QAARgF,IAAuB,EAAKhF,MAAQ,GACpC,MAGF,KAAK,EACH,EAAKA,MAAgB,QAARgF,EACT,EACQ,SAARA,EACE,EACA,EACN,MAGF,KAAK,EACH,EAAKhF,MAAgB,QAARgF,EACT,EACQ,SAARA,EACE,EACA,EACN,MAGF,KAAK,EACH,EAAKhF,MAAgB,QAARgF,EACT,EACA,IAQV8D,KAAK7B,KAAO,SAACjG,GACX,OAAQA,EAAKT,MACX,IAAI,OACF,EAAKsD,IAAM6D,GAAY,EAAK7D,IAAK,CAAEvD,QAASU,IAC5C,EAAKsI,YAAY,EAAKzF,IAAImB,UAC1B,WAAKnB,IAAImB,SAASA,UAAuB,EAAKD,QAC9C,EAAKlB,IAAImB,SAAW,KACpB,MAGF,IAAI,WACF,EAAKnB,IAAM8D,GAAgB,EAAK9D,IAAK,CAAEvD,QAASU,IAChD,IAAMyJ,EAAW,EAAKlB,aAAa,EAAKL,WACxC,EAAKD,SAASwB,GAAUzF,SAAWhE,EAAKgE,SACxC,EAAKsF,YAAYtJ,EAAKgE,UAElB,SAAAhE,EAAKgE,WACP,EAAKoE,gBAAkB,MAGzB,SAAApI,EAAKgE,UAAuB,EAAKD,QACjC,MAGF,IAAI,SACF,EAAKlB,IAAMgE,GAAY,EAAKhE,KAC5B,EAAKyF,YAAY,EAAKzF,IAAImB,UAC1B,EAAKsE,YAAY,CAAE/I,KAAK,WACxB,EAAKwI,MAAK,GACV,MAGF,IAAI,QACF,EAAKO,YAAY,CAAE/I,KAAK,UACxB,MAGF,IAAI,UACF,EAAK+I,YAAY,CAAE/I,KAAK,WACxB,EAAKwI,MAAK,K,w2BC7SlB,IAAM2B,GAAUC,KAAOC,IAAV,MAOU,SAAA/B,GAAK,OAAIA,EAAM1I,KAAO0K,aAAb,MAAkCA,aAAlC,SACT,SAAAhC,GAAK,OAAIA,EAAM1I,KAAO0K,aAAb,MAAkCA,aAAlC,SAI1BC,GAAUH,KAAOC,IAAV,MASE,mBAAGzK,EAAH,EAAGA,KAAM4K,EAAT,EAASA,SAAT,OACb,kBAACL,GAAD,CAASvK,KAAOA,GACd,kBAAC2K,GAAD,CAAS3K,KAAOA,EAAO4K,SAAWA,M,k6BCvBtC,IAAMC,GAAOL,KAAOC,IAAV,MAME,SAAA/B,GAAK,OAAIA,EAAMoC,KAAOJ,aAAb,MAAgCA,aAAhC,SAGjB,SAAAhC,GAAK,OAAIA,EAAM1G,MAAQ0I,aAAd,KAMHhC,EAAMoC,KACFJ,aADJ,MAEIhC,EAAMzG,KACFyI,aADJ,OAEKhC,EAAMqC,aAAerC,EAAM5G,IAC1B4I,aADF,MAEEA,aAFF,UASH,YAAChC,GAAD,OACb,kBAACmC,GAASnC,EAASA,EAAM3G,MAAN,MC9BN,eAAyB,IAAtBmD,EAAqB,EAArBA,KAAM7C,EAAe,EAAfA,SACtB,IAAK6C,EAAM,OAAO,EADmB,MAGhBrB,EAAQqB,GAHQ,mBAG9B9E,EAH8B,KAGxB4B,EAHwB,KAKrC,OAAOK,EAASjC,GAAM4B,GAAMM,QAC1B,SAAC0I,EAAWlI,GAAZ,QAAqBkI,GAAqB,OAATlI,KACjC,IC4BWmI,gBAVS,SAACpL,GAAD,MAAY,CAClCqG,KAAMrG,EAAMqG,KACZQ,IAAK7G,EAAM6G,IACXhD,IAAK7D,EAAM6D,QAGc,SAACwH,GAAD,MAAe,CACxCC,MAAO,SAAChL,GAAD,OAAa+K,EAAS,CAAE9K,KAAK,aAAeD,gBAGtC8K,EA/BF,SAACvC,GAAD,OACX,kBAAC0C,GAAD,CAAKpL,KAAO,UAAA0I,EAAMxC,KAAKhG,QAAsB,YAAAwI,EAAMxC,KAAKhG,SAAyBwI,EAAMxC,KAAKlG,MAExF0I,EAAMhF,IAAIJ,KAAK7C,KAAI,SAAAwE,GAAG,OACpBA,EAAIxE,KAAI,gBAAGb,EAAH,EAAGA,GAAIoC,EAAP,EAAOA,KAAMF,EAAb,EAAaA,IAAKC,EAAlB,EAAkBA,KAAME,EAAxB,EAAwBA,KAAxB,OACN,kBAAC,GAAD,CACEoJ,IAAMzL,EACNA,GAAKA,EACLkL,KAAOlL,IAAO8I,EAAMhC,IAAIpF,aACxBU,KAAOA,EACPF,IAAMA,EACNC,KAAOA,EACPE,KAAOA,EACP8I,YAAcO,GAAa,CAAEpG,KAAMlD,EAAMK,SAAUqG,EAAMhF,IAAIrB,WAC7DkJ,QAAU,YAAU,UAAA7C,EAAMxC,KAAKhG,QAAsB,YAAAwI,EAAMxC,KAAKhG,UAA0BwI,EAAMhF,IAAItB,aAAe,GAAKJ,IAAU0G,EAAMyC,MAAMvL,gBCgB3IqL,gBAVS,SAACpL,GAAD,MAAY,CAClCqG,KAAMrG,EAAMqG,KACZQ,IAAK7G,EAAM6G,IACXhD,IAAK7D,EAAM6D,QAGc,SAACwH,GAAD,MAAe,CACxCM,KAAM,SAACrL,GAAD,OAAa+K,EAAS,CAAE9K,KAAK,OAASD,QAAS,CAAEC,KAAK,OAASS,KAAMV,SAG9D8K,EA/BD,SAACvC,GAAD,OACZ,kBAAC0C,GAAD,CAAKpL,KAAO0I,EAAMxC,KAAKlG,MAEnB0I,EAAMhF,IAAIkC,MAAMnF,KAAI,SAAAwE,GAAG,OACrBA,EAAIxE,KAAI,gBAAGb,EAAH,EAAGA,GAAIoC,EAAP,EAAOA,KAAMF,EAAb,EAAaA,IAAKC,EAAlB,EAAkBA,KAAME,EAAxB,EAAwBA,KAAxB,OACN,kBAAC,GAAD,CACEoJ,IAAMzL,EACNA,GAAKA,EACLkL,KAAOlL,IAAO8I,EAAMhC,IAAIrF,SACxBW,KAAOA,EACPF,IAAMA,EACNC,KAAOA,EACPE,KAAOA,EACPsJ,QAAU,WAAQ,SAAA7C,EAAMxC,KAAKhG,QAAqBwI,EAAMxC,KAAKlG,OAAS0I,EAAMhC,IAAItF,qBAAuBU,IAAQC,GAAQ2G,EAAM8C,KAAK5L,IAClIgG,OAAK,c,yMCjBF4E,YAAOC,IAAtB,M,oBCAe,SAASgB,GAAI/C,GAAQ,IAAD,OACjCC,KAAK+C,WAAa,KAElB/C,KAAKC,KAAO,WACV,EAAK+C,KAAO,IAAIC,KAChB,EAAKC,WAAa,KAClBnD,EAAMvB,kBAAiB,GAEvB,EAAKwE,KAAKG,GAAG,QAAQ,WACE,OAAjB,EAAKH,KAAK/L,GACZ,EAAK+L,KAAK/L,GAAK,EAAK8L,WAEpB,EAAKA,WAAa,EAAKC,KAAK/L,GAE9B8I,EAAMzB,UAAU,EAAK0E,KAAK/L,OAG5B,EAAK+L,KAAKG,GAAG,cAAc,SAACC,GACtB,EAAKF,WACPE,EAAED,GAAG,OAAQC,EAAEC,QAGjB,EAAKH,WAAaE,EAClB,EAAK1F,YAGP,EAAKsF,KAAKG,GAAG,gBAAgB,WAG3B,EAAKH,KAAKM,eAGZ,EAAKN,KAAKG,GAAG,SAAS,WACpB,EAAKD,WAAa,QAGpB,EAAKF,KAAKG,GAAG,SAAS,WACpBpD,EAAMwD,sBAIR,EAAKP,KAAKG,GAAG,SAAS,WACpB,EAAKD,WAAa,SAItBlD,KAAKtC,MAAQ,WACXqC,EAAMxB,gBAAe,GAErB,EAAK2E,WAAWC,GAAG,OAAQpD,EAAM1B,SAEjC,EAAK6E,WAAWC,GAAG,SAAS,WAC1B,EAAKD,WAAa,KAClBnD,EAAMwD,uBAIVvD,KAAKwD,KAAO,WACN,EAAKN,YAAY,EAAKA,WAAWG,QAErC,EAAKH,WAAa,EAAKF,KAAKV,QAAQvC,EAAMnH,OAAQ,CAChD6K,UAAU,EACVC,cAAe,SAGjB,EAAKR,WAAWC,GAAG,QAAQ,WACzBpD,EAAMxB,gBAAe,MAGvB,EAAK2E,WAAWC,GAAG,SAAS,WAC1B,EAAKD,WAAa,KAClBnD,EAAMwD,sBAGR,EAAKL,WAAWC,GAAG,OAAQpD,EAAM1B,UAGnC2B,KAAK7B,KAAO,SAACjG,GACX,EAAKgL,YAAc,EAAKA,WAAWS,MAAQ,EAAKT,WAAW/E,KAAKjG,I,8jCC7EpE,IAAM0L,GAAQC,aAAH,MAOLC,GAAQjC,KAAOkC,MAAMC,MAAM,CAC/BvM,KAAK,OACLwM,KAAM,GACNC,UAAW,IAHCrC,CAAH,MAeLsC,GAAQtC,KAAOC,IAAV,MAGC,SAAA/B,GAAK,OAAI,IAAoB,EAAdA,EAAMqE,QACjBR,IAGVS,GAAcxC,KAAOC,IAAV,MAOXwC,GAAazC,KAAOC,IAAV,KAMXgC,GAAyBK,IAKxBvC,GAAUC,KAAOC,IAAV,MAOE,eAAiE,IAA9DyC,EAA6D,EAA7DA,QAA6D,IAApDC,gBAAoD,SAAlCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,QAA0B,IAAjBC,aAAiB,WACvEZ,EAAQa,iBAAO,MADwD,EAEnDC,mBAASH,GAF0C,mBAEtEN,EAFsE,KAE/DU,EAF+D,KAGvEC,EAAY,SAACC,GACb,YAAAA,EAAMvN,MAAsB,UAAAuN,EAAMtC,IACpC+B,IAEAK,EAASE,EAAMC,OAAOC,gBAIzBV,GAAYW,qBACX,WACEpB,EAAMqB,QAAQC,UAEhB,IAGF,IAAMC,EAAad,EACf,CACAe,SAAU,SAACP,GAAD,OAAWA,EAAMQ,kBAC3Bb,SAEA,CACA/B,QAASmC,EACTU,QAASV,EACTW,QAASX,EACTQ,SAAUR,EACVY,UAAWZ,EACXR,WAGJ,OACE,kBAAC,GAAD,SAEE,kBAACD,GAAD,KACE,kBAACD,GAAD,KAAe,OAAI1G,OAAO,GAAK+G,IAC/B,kBAACZ,GAAD,eAAO8B,IAAM7B,GAAauB,KACvBd,GAAY,kBAACL,GAAD,CAAOC,MAAQA,GAAf,MALnB,M,6YCvFJ,IAAMyB,GAAShE,KAAOiE,OAAV,MAsBG,mBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,UAAWpD,EAAzB,EAAyBA,QAAzB,IAAkCqD,YAAlC,WAA6CvL,EAA7C,EAA6CA,MAA7C,OACb,kBAACmL,GAAD,CACEE,UAAYA,EACZC,UAAYA,EACZpD,QAAU,oBAAOA,EAAyBA,OAAUsD,QAGxCA,IAAVxL,EACIuL,EACA,CACAA,EAAKE,UAAU,EAAGzL,GAClB,0BAAMgI,IAAMuD,GAASA,EAAKvL,IAC1BuL,EAAKE,UAAUzL,EAAQ,M,y5BC9BjC,IAAMkH,GAAUC,KAAOC,IAAV,MAWI,SAAA/B,GAAK,OAAIA,EAAMqG,UAc1BpE,GAAUH,KAAOC,IAAV,MAYPuE,GAAUxE,KAAOC,IAAV,MAuGEQ,gBAfS,SAACpL,GAAD,MAAY,CAClCqG,KAAMrG,EAAMqG,KACZQ,IAAK7G,EAAM6G,QAGc,SAACwE,GAAD,MAAe,CACxCrE,OAAQ,SAAC1G,GAAD,OAAa+K,EAAS,CAAE9K,KAAK,UAAYD,aACjD6G,QAAS,SAAC7G,GAAD,OAAa+K,EAAS,CAAE9K,KAAK,UAAYD,aAClD8G,UAAW,SAAC9G,GAAD,OAAa+K,EAAS,CAAE9K,KAAK,cAAgBD,aACxDgG,WAAY,SAAC8I,GAAD,OAAa/D,EAAS,CAAE9K,KAAK,cAAgBD,QAAS8O,KAClE/H,eAAgB,SAAC/G,GAAD,OAAa+K,EAAS,CAAE9K,KAAM,mBAAoBD,aAClEgH,iBAAkB,SAAChH,GAAD,OAAa+K,EAAS,CAAE9K,KAAK,qBAAuBD,aACtE+L,iBAAkB,kBAAMhB,EAAS,CAAE9K,KAAK,cAG3B6K,EAnGA,SAACvC,GAAW,IAAD,EACO8E,mBAAS,IADhB,mBACjBjM,EADiB,KACT2N,EADS,KAGlBrI,EAAS,SAACjH,GAAD,IAAKgH,EAAL,wDAAuBnF,EAAvB,+DACbiH,EAAM7B,OAAO,CACXF,UAAW,IAAI8E,GAAI,CACjBlK,OAAQ3B,EACRqH,UAAWyB,EAAMzB,UACjBC,eAAgBwB,EAAMxB,eACtBC,iBAAkBuB,EAAMvB,iBACxBH,QAAS0B,EAAM1B,QACfkF,iBAAkBxD,EAAMwD,mBAE1BtF,WACAnF,mBAGEwJ,EAAU,eAACrL,EAAD,uDAAM2B,EAAN,OACd3B,GACE,KAAFA,GACAA,IAAO8I,EAAMhC,IAAInF,QACjBsF,EAAOjH,GAAI,IAuBb,OAdAkO,qBACE,WACM,YAAApF,EAAMxC,KAAKhG,SAEa,OAAxBwI,EAAMhC,IAAIC,UACZE,EAAO6B,EAAMhC,IAAInF,QACPmH,EAAMhC,IAAIjF,gBACpBiH,EAAMhC,IAAIC,UAAUiC,OACpBF,EAAMhC,IAAIE,UAAY8B,EAAMhC,IAAIC,UAAUwF,WAG9C,CAACzD,IAGKA,EAAMxC,KAAKhG,QACjB,IAAI,SACF,OACE,kBAAC,GAAD,CAAS6O,OAAM,oBACb,kBAAC,GAAD,KACE,oDACA,kBAACC,GAAD,KACE,kBAAC,GAAD,CAAQN,WAAS,EAACnD,QAAU,WAAQ7C,EAAMvC,YAAW,IAASyI,KAAI,SAAcvL,MAAQ,IACxF,kBAAC,GAAD,CAAQkI,QAAU,WAAQ7C,EAAMvC,YAAW,IAAUyI,KAAI,WAAgBvL,MAAQ,OAM3F,IAAI,UACF,MAAO,KAAAqF,EAAMhC,IAAInF,OAEb,kBAAC,GAAD,CAASwN,OAAM,4BACb,kBAAC,GAAD,qBAIF,kBAAC,GAAD,CAASA,OAAM,4BACb,kBAAC,GAAD,KACE,iDAAsB,6BAAtB,eAAwC,6BAAxC,qBACA,kBAAC,GAAD,CAAO1B,QAAU3E,EAAMhC,IAAInF,OAAOiB,OAAS8K,MAAQ5E,EAAMhC,IAAInF,OAAS4L,UAAQ,IAC9E,oDAAyB,6BAAzB,sBACA,kBAAC,GAAD,CAAOD,QAhDC,SAAC,GAAD,IAAaI,EAAb,EAAGM,OAAUN,MAAb,OAA0B4B,EAAa5B,IAgDhBF,OAASnC,EAAUoC,QAAU9L,EAAOiB,SACnE,kBAACwM,GAAD,KACE,kBAAC,GAAD,CAAQzD,QAAU,WAAQN,KAAa2D,KAAI,YAC3C,kBAAC,GAAD,CAAQrD,QAjDT,WACX2D,EAAa,IACbxG,EAAMwD,oBA+C+B0C,KAAI,YAMzC,QAAS,OAAO,S,snEC3HpB,IAAMrE,GAAUC,KAAOC,IAAV,MAcI,SAAA/B,GAAK,OAAIA,EAAMqG,UAc1BpE,GAAUH,KAAOC,IAAV,MAoBP0E,GAAY3E,KAAOC,IAAV,MAOT2E,GAAa5E,KAAOC,IAAV,MAWZ,SAAA/B,GAAK,OAAKA,EAAM2G,UAAY3E,aAAnB,KAMHhC,EAAM4G,OACF5E,aADJ,MAEIA,aAFJ,UASJ6E,GAAQ/E,KAAOC,IAAV,MAKLuE,GAAUxE,KAAOC,IAAV,MAmEEQ,gBAVS,SAACpL,GAAD,MAAY,CAClCqG,KAAMrG,EAAMqG,KACZxC,IAAK7D,EAAM6D,QAGc,SAACwH,GAAD,MAAe,CACxC7E,MAAO,kBAAM6E,EAAS,CAAE9K,KAAK,WAC7BsF,OAAQ,kBAAMwF,EAAS,CAAE9K,KAAK,eAGjB6K,EA3DC,SAACvC,GACf,IAAM2G,EAAW,SAAC,GAAD,IAAGjP,EAAH,EAAGA,KAAM4B,EAAT,EAASA,KAAMc,EAAf,EAAeA,KAAf,OAC0B,OAAzC4F,EAAMhF,IAAIrB,SAASjC,GAAM4B,GAAMc,IAE3B0M,EAAO,SAAC,GAAD,IAAGpP,EAAH,EAAGA,KAAM4B,EAAT,EAASA,KAAMc,EAAf,EAAeA,KAAf,OACX,kBAACsM,GAAD,CACEE,OACE5G,EAAMhF,IAAId,YAAYxC,OAASA,GAC/BsI,EAAMhF,IAAId,YAAYZ,OAASA,GAC/B0G,EAAMhF,IAAId,YAAYE,OAASA,EAEjCuM,SAAWA,EAAS,CAAEjP,OAAM4B,OAAMc,YAGtC,OACE,kBAAC,GAAD,CAASiM,OAAM,oBACb,kBAAC,GAAD,+BACyB,6BADzB,sBACkD,6BADlD,cAEE,kBAACI,GAAD,KAEI,YAAIxN,MAAM,IAAIW,QACZ,SAACmN,EAAMrK,EAAGxD,GAAV,MAAgB,sBACR6N,GADQ7N,EAAI,IAAM,EAAV,YACC,YAAID,MAAM,GAAGnC,QAAQiB,KAAI,SAACoB,GAAD,OAAO,kBAAC0N,GAAD,CAAOlE,IAAG,UAAOxJ,EAAP,YAAcD,SADzD,YAEC8G,EAAMhF,IAAIrB,SAAST,EAAI,GAAGU,QACrC,SAAC2C,EAAKjD,EAAMqB,GAIV,IAHA,IAAMa,EAAIb,EAAQ,EACdqF,EAAMhF,IAAIrB,SAAST,EAAI,GAAGyB,EAAQ,GAAGb,OAASa,EAAQA,EACtDA,EACKP,EAAO,EAAGA,EAAOd,EAAKQ,OAAQM,IACrCmC,EAAInC,EAAOoB,GAAK,kBAACsL,EAAD,CAAMnE,IAAG,UAAOzJ,EAAI,EAAX,YAAkByB,EAAlB,YAA6BP,GAAU1C,KAAOwB,EAAI,EAAII,KAAO0G,EAAMhF,IAAIrB,SAAST,EAAI,GAAGY,OAASa,EAAQ,EAAIP,KAAOd,EAAKQ,OAASM,EAAO,IAEnK,OAAOmC,IAEX,YAAItD,MAAM,IAAIlB,KAAI,SAAC2E,EAAGvD,GAAJ,OAAU,kBAAC0N,GAAD,CAAOlE,IAAG,UAAOxJ,EAAP,YAAcD,aAExD,KAIN,6BACA,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQgN,KAAI,SAAcvL,MAAQ,EAAIkI,QAAU7C,EAAMhD,OAASgJ,WAAS,IACxE,kBAAC,GAAD,CAAQE,KAAI,UAAevL,MAAQ,EAAIkI,QAAU,YAAA7C,EAAMxC,KAAKhG,QAAwBwI,EAAMrC,c,8zCCxIpG,IAAMqJ,GAASlF,KAAOC,IAAV,MAWNF,GAAUC,KAAOC,IAAV,MAYI,SAAA/B,GAAK,OAAIA,EAAMqG,UAc1BpE,GAAUH,KAAOC,IAAV,MAWPkF,GAAOnF,KAAOC,IAAV,MAOJuE,GAAUxE,KAAOC,IAAV,MAoEEQ,gBATS,SAACpL,GAAD,MAAY,CAClCqG,KAAMrG,EAAMqG,SAGa,SAACgF,GAAD,MAAe,CACxC5E,OAAQ,kBAAM4E,EAAS,CAAE9K,KAAK,YAC9BwP,MAAO,kBAAM1E,EAAS,CAAE9K,KAAK,cAGhB6K,EAjED,SAACvC,GACb,IAAMmH,EAAa,CACjBC,QAAQ,WACRC,OAAO,cAGT,OAAQrH,EAAMxC,KAAKhG,QACjB,IAAI,SACJ,IAAI,UACF,OAAOwI,EAAMxC,KAAKnG,iBAEd,kBAAC2P,GAAD,KACE,kBAAC,GAAD,CAASX,OAASc,EAAWnH,EAAMxC,KAAKhG,SACtC,kBAAC,GAAD,KACE,kBAACyP,GAAD,mDAQN,kBAACD,GAAD,KACE,kBAAC,GAAD,CAASX,OAASc,EAAWnH,EAAMxC,KAAKhG,SACtC,kBAAC,GAAD,KACE,kBAACyP,GAAD,MACKjH,EAAMxC,KAAKnG,kBAAZ,sBAAuD,6BACvD,QAAA2I,EAAMxC,KAAK9F,MAAkBsI,EAAMxC,KAAK5F,mBAAxC,wBAEJ,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAQsO,KAAI,MAAWvL,MAAQ,EAAIkI,QAAU7C,EAAMpC,OAASoI,WAAS,IACrE,kBAAC,GAAD,CAAQE,KAAI,KAAUvL,MAAQ,EAAIkI,QAAU7C,EAAMkH,YAOhE,IAAI,OACF,OACE,kBAACF,GAAD,KACE,kBAAC,GAAD,CAASX,OAAM,eACb,kBAAC,GAAD,KACE,kBAACY,GAAD,qBACe,6BADf,0BAQV,QACE,OAAO,SCzDE1E,gBAJS,SAACpL,GAAD,MAAY,CAClCK,OAAQL,EAAMqG,KAAKhG,UAGN+K,EAjDF,SAACvC,GACZ,OAAQA,EAAMxI,QACZ,IAAI,SACJ,IAAI,UACF,OAAO,kBAAC,GAAD,MAET,IAAI,QACJ,IAAI,UACF,OACE,kBAAC8P,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,OAIN,IAAI,UACJ,IAAI,OACF,OACE,kBAACA,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,OAIN,IAAI,OACF,OACE,kBAACA,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,OAIN,IAAI,SACF,OACE,kBAACA,GAAD,KACE,kBAAC,GAAD,MACA,kBAAC,GAAD,OAIN,QACE,OAAO,SCoGE/E,gBAtBS,SAACpL,GAAD,MAAY,CAClCqG,KAAMrG,EAAMqG,KACZQ,IAAK7G,EAAM6G,IACXhD,IAAK7D,EAAM6D,QAGc,SAACwH,GAAD,MAAe,CACxC9E,aAAc,SAAClG,GAAD,OAAYgL,EAAS,CAAE9K,KAAK,gBAAkBD,QAASD,KACrEgH,eAAgB,SAAC/G,GAAD,OAAa+K,EAAS,CAAE9K,KAAM,mBAAoBD,aAClEgG,WAAY,SAAC8I,GAAD,OAAa/D,EAAS,CAAE9K,KAAK,cAAgBD,QAAS8O,KAClE1I,QAAS,SAACpG,GAAD,OAAa+K,EAAS,CAAE9K,KAAK,WAAaD,aACnD6G,QAAS,SAAC7G,GAAD,OAAa+K,EAAS,CAAE9K,KAAK,UAAYD,aAClD0G,OAAQ,SAAC1G,GAAD,OAAa+K,EAAS,CAAE9K,KAAK,UAAYD,aACjD4G,aAAc,kBAAMmE,EAAS,CAAE9K,KAAK,mBACpC0G,KAAM,SAAC3G,GAAD,OAAa+K,EAAS,CAAE9K,KAAK,OAASD,aAC5C8P,SAAU,kBAAM/E,EAAS,CAAE9K,KAAK,eAChCsF,OAAQ,kBAAMwF,EAAS,CAAE9K,KAAK,YAC9BkG,OAAQ,kBAAM4E,EAAS,CAAE9K,KAAK,YAC9BiG,MAAO,kBAAM6E,EAAS,CAAE9K,KAAK,WAC7BwP,MAAO,kBAAM1E,EAAS,CAAE9K,KAAK,cAGhB6K,EAjJH,SAACvC,GACX,IAAMwH,EAAiB,SAACvC,GACtB,IAAMtC,EAAMsC,EAAMtC,IAAI8E,cAEtB,OAAQzH,EAAMxC,KAAKhG,QACjB,IAAI,SACC,MAAHmL,GAAe3C,EAAMvC,YAAW,GAC7B,MAAHkF,GAAe3C,EAAMvC,YAAW,GAChC,MAGF,IAAI,QACC,MAAHkF,GAAe3C,EAAMhD,SACrB,MAGF,IAAI,UACC,MAAH2F,GAAe3C,EAAMhD,SAClB,MAAH2F,GAAe3C,EAAMrC,QACrB,MAGF,IAAI,SACJ,IAAI,UACC,MAAHgF,GAAe3C,EAAMpC,SAClB,MAAH+E,GAAe3C,EAAMkH,UA+F3B,OAvFA9B,qBACE,WAGE,OAFAsC,SAASC,oBAAT,WAAyCH,GAEjCxH,EAAMxC,KAAKhG,QACjB,IAAI,SACFkQ,SAASE,iBAAT,WAAsCJ,GACtC,MAGF,IAAI,UACExH,EAAMhC,IAAIlF,cACZkH,EAAMnC,QAAQmC,EAAMhC,IAAIE,UACxB8B,EAAMtC,aAAN,UAEF,MAGF,IAAI,QACE,SAAAsC,EAAMxC,KAAK9F,OACe,OAAxBsI,EAAMhC,IAAIC,UACZ+B,EAAM7B,OAAO,CACXF,UAAW,IAAI8B,GAAG,CAChBvB,eAAgBwB,EAAMxB,eACtBF,QAAS0B,EAAM1B,YAGT0B,EAAMhC,IAAIlF,aACpBkH,EAAMhC,IAAIC,UAAUiC,QAIG,IAA3BF,EAAMhF,IAAItB,cAAsBsG,EAAMtC,aAAN,WAChCgK,SAASE,iBAAT,WAAsCJ,GACtC,MAGF,IAAI,UACF,GAA+B,IAA3BxH,EAAMhF,IAAItB,aAAoB,CAChCsG,EAAMtC,aAAN,SACA,MAGF,GAAIsC,EAAMxC,KAAKpG,YAAa,CAC1B4I,EAAMtC,aAAasC,EAAMxC,KAAK7F,aAAX,eACnB,MAGF+P,SAASE,iBAAT,WAAsCJ,GACtC,MAGF,IAAI,OACFxH,EAAMxC,KAAK7F,cAAgBqI,EAAMtC,aAAN,QAC3B,MAGF,IAAI,OACF,MAGF,IAAI,SACJ,IAAI,UACF,GAAIsC,EAAMxC,KAAKnG,iBAAkB,CAC/B2I,EAAMxC,KAAK5F,mBAAqBoI,EAAMuH,WACtC,MAGFG,SAASE,iBAAT,WAAsCJ,GAc1C,OAPIxH,EAAMhC,IAAI9F,SACZ8H,EAAMhC,IAAIC,UAAUG,KAAK4B,EAAMhC,IAAI9F,SACnC8H,EAAM3B,gBACG2B,EAAMhF,IAAImB,UACnB6D,EAAM5B,KAAK4B,EAAMhF,IAAImB,UAGhB,kBAAMuL,SAASC,oBAAT,WAAyCH,MAExD,CAACxH,IAGI,kBAAC,GAAD,SCpHT6H,IAASC,OACP,kBAAC,IAAD,CAAUzI,MAAQA,IAAQ,kBAAC,IAAD,KAAQ,kBAAC,IAAD,CAAO0I,KAAK,IAAIC,UAAYC,OAC9DP,SAASQ,eAAe,W","file":"static/js/main.5b041faa.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 48;","export default (state) => ({\n  ...state,\n  isAllyReady: true,\n});\n","export default (state) => ({\n  ...state,\n  isAllyWantRepeat: true,\n});\n","export default (state) => ({\n  ...state,\n  move: !state.move,\n});\n","export default (state, action) => ({\n  ...state,\n  status: action.payload ? `connect` : `place`,\n  type: action.payload ? `pvp` : `comp`,\n  move: action.payload ? state.move : true,\n});\n","export default (state, action) => ({\n  ...state,\n  status: action.payload,\n});\n","export default (state) => ({\n  ...state,\n  isEnemyReady: true,\n});\n","export default (state) => ({\n  ...state,\n  isEnemyWantRepeat: true,\n});\n","import ready from '../actions/ready';\nimport repeat from '../actions/repeat';\nimport setMove from '../actions/setMove';\nimport selectType from '../actions/selectType';\nimport changeStatus from '../actions/changeStatus';\nimport receiveReady from '../actions/receiveReady';\nimport receiveRepeat from '../actions/receiveRepeat';\n\n/**\n * game statuses:\n * choose  -- it's waiting for game type to be chosen\n * connect -- it's waiting for opponent to connect\n * place   -- it's waiting for all ships to be placed (switched automatically)\n * confirm -- it's waiting for confirm of ship placement\n * wait    -- it's waiting for opponent to confirm ship placement\n * play    -- it's waiting till there were no ships in any of seas\n * victory -- it's waiting for confirmation of new round\n * defeat  -- same as victory\n *\n * game types:\n * pvp  -- you versus someone on network\n * comp -- you versus computer\n *\n * isAllyReady  -- flag shows that you confirmed ship placement\n * isEnemyReady -- flag shows that your opponent confirmed ship placement\n *\n * isAllyWantRepeat  -- flag shows that you agreed on another round\n * isEnemyWantRepeat -- flag shows that your opponent agreed on another round\n *\n * move -- flag shows if it's your turn to fire (in comp type you always start first)\n */\n\nconst initialState = (status = `choose`, move = false) => ({\n  type: null,\n  isAllyReady: false,\n  isEnemyReady: false,\n  isAllyWantRepeat: false,\n  isEnemyWantRepeat: false,\n  status,\n  move,\n});\n\nexport default (state = initialState(), action) => {\n  switch (action.type) {\n    case `SELECT_TYPE`:\n      return selectType(state, action);\n\n    case `CHANGE_STATUS`:\n      return changeStatus(state, action);\n\n    case `READY`:\n      return ready(state);\n\n    case `REPEAT`:\n      return repeat(state);\n\n    case `SEND`: {\n      switch (action.payload.type) {\n        case `feedback`:\n          return action.payload.feedback === `miss`\n            ? setMove(state)\n            : state;\n\n        case `victory`:\n          return changeStatus(state, { payload: `victory` });\n\n        default:\n          return state;\n      }\n    }\n\n    case `RECEIVE`: {\n      switch (action.payload.type) {\n        case `ready`:\n          return receiveReady(state);\n\n        case `repeat`:\n          return receiveRepeat(state);\n\n        case `feedback`:\n          return action.payload.feedback === `miss`\n            ? setMove(state)\n            : state;\n\n        case `victory`:\n          return changeStatus(state, { payload: `defeat` });\n\n        default:\n          return state;\n      }\n    }\n\n    case `SET_MOVE`:\n      return action.payload\n        ? setMove(state)\n        : state;\n\n    case `RESET`:\n      return initialState();\n\n    case `NEW_ROUND`:\n      return initialState(`place`, state.type === 'pvp' ? !state.move : true);\n\n    default:\n      return state;\n  }\n}\n","/**\n * input: `cell-3-4-ally`\n * output: [3, 4]\n */\n\n/**\n * choose less fucked up version:\n  */\n// export default (id) => id.split('-').reduce((a, i) => +i ? [ ...a, +i] : a, []);\nexport default (id) => id.match(/\\d+-/g).map(item => parseInt(item));\n","import getCoordinates from '../scripts/getCoordinates';\r\n\r\nexport default (state, action) => {\r\n  const message = action.payload.type === `fire`\r\n    ? { type: `fire`, data: getCoordinates(action.payload.data) }\r\n    : { ...action.payload };\r\n\r\n  console.log(`sent:     `, JSON.parse(JSON.stringify(message)));\r\n\r\n  return {\r\n    ...state,\r\n    message,\r\n    waitingForFeedback: action.payload.type === `fire`,\r\n    lastSent: action.payload.type === `fire` ? action.payload.data : state.lastSent,\r\n  };\r\n}\r\n","export default (state, action) => ({\n  ...state,\n  ...action.payload,\n});\n","export default (state, action) => {\r\n  console.log(`received: `, JSON.parse(JSON.stringify(action.payload)));\r\n\r\n  return {\r\n    ...state,\r\n    waitingForFeedback: false,\r\n    lastReceived: action.payload.type === `fire` ? `cell-${ action.payload.data[0] }-${ action.payload.data[1] }-ally` : state.lastReceived,\r\n  };\r\n}\r\n","export default (state, action) => ({\n  ...state,\n  peerID: action.payload,\n});\n","export default (state) => ({ ...state, message: null });\n","export default (state, action) => ({\n  ...state,\n  isConnected: action.payload,\n});\n","export default (state, action) => ({\n  ...state,\n  isInitialised: action.payload,\n});\n","export default (type) => {\n  const ten = [...Array(10).keys()];\n\n  return ten.map(y =>\n    ten.map(x =>\n      ({\n        id: `cell-${ x }-${ y }-${ type }`,\n        hit: false,\n        miss: false,\n        ship: false,\n        sank: false,\n      })\n    )\n  );\n};\n","/**\n * input: `1-2-3`\n * output: [1, 2, 3]\n */\n\nexport default (string) => string.split(`-`).map(item => parseInt(item));\n","/**\r\n * counting ships to be placed\r\n * takes every ship in array 'type',\r\n * if ship has null as element - returns 1 (as one that need placement),\r\n * if not -- 0 (as placed).\r\n * then returns number of ships that not placed\r\n */\r\n\r\nconst count = (type) => type\r\n  .map(item =>                  // let's take a ship\r\n    item[0] === null            // i'ts first deck empty?\r\n      ? 1                       // it should be placed\r\n      : item.length === 1       // it's single decker?\r\n      ? 0                       // nothing to do here\r\n      : item.reduce((a, b) =>   // let's look at all it's decks\r\n        a === 1                 // was there empty deck earlier?\r\n          ? 1                   // there was, keep it to the end\r\n          : b === null          // is this deck empty?\r\n            ? 1                 // it should be placed\r\n            : 0                 // nothing to do here\r\n      )\r\n  )\r\n  .reduce((a, b) => a + b);     // sum of all ships that need to be placed\r\n\r\nexport default (state) => {\r\n  const shipsToPlace = state.squadron.reduce((sum, type) => sum + count(type), 0);\r\n  let deckToPlace = { ...state.deckToPlace };\r\n\r\n  findNext:\r\n    for (let type = 0; type < state.squadron.length; type++) {\r\n      for (let ship = 0; ship < state.squadron[type].length; ship++) {\r\n        for (let deck = 0; deck < state.squadron[type][ship].length; deck++) {\r\n          if (state.squadron[type][ship][deck] === null) {\r\n            deckToPlace = { type, ship, deck };\r\n            break findNext;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n  return {\r\n    ...state,\r\n    shipsToPlace,\r\n    deckToPlace,\r\n  };\r\n}\r\n","import countShips from './countShips';\n\n/**\n * adding new deck to the ship;\n * renewing 'ship' parameter of all cells of that ship\n */\n\nexport default (type, ship, deck, coordinates, state, toStart) => {\n  const newState = { ...state };\n\n  if (toStart) {\n    newState.squadron[type][ship].pop();\n    newState.squadron[type][ship].unshift(coordinates);\n  } else {\n    newState.squadron[type][ship][deck] = coordinates;\n  }\n\n  newState.squadron[type][ship].forEach((item, index) => {\n    item && (newState.ally[item[1]][item[0]].ship = `${ type }-${ ship }-${ index }`);\n  });\n\n  return countShips(newState);\n}\n","import countShips from './countShips';\n\n/**\n * removing deck from the ship;\n * removing 'ship' parameter of cell of removed deck\n * and renewing it for the rest cells of that ship\n */\n\nexport default (type, ship, deck, coordinates, state) => {\n  const newState = { ...state };\n\n  newState.squadron[type][ship].splice(deck, 1);\n  newState.squadron[type][ship].push(null);\n\n  newState.ally[coordinates[1]][coordinates[0]].ship = false;\n  newState.squadron[type][ship].forEach((item, index) => {\n    item && (newState.ally[item[1]][item[0]].ship = `${ type }-${ ship }-${ index }`);\n  });\n\n  return countShips(newState);\n}\n","/**\n * returns ship parameter of cell with current coordinates\n */\n\nexport default (sea, coordinates) => sea[coordinates[1]][coordinates[0]].ship;\n","import getShip from '../scripts/getShip';\r\nimport makeDeck from '../scripts/makeDeck';\r\nimport removeDeck from '../scripts/removeDeck';\r\nimport isThereShip from '../scripts/isThereShip';\r\nimport getCoordinates from '../scripts/getCoordinates';\r\nimport isThereShipInCross from '../scripts/isThereShipInCross';\r\nimport isThereShipDiagonally from '../scripts/isThereShipDiagonally';\r\n\r\nexport default (state, action) => {\r\n  const newState = { ...state };\r\n  const coordinates = getCoordinates(action.payload);\r\n\r\n  /**\r\n   * removing decks from ship\r\n   */\r\n  const thereIsShip = isThereShip(newState.ally, coordinates);\r\n  if (thereIsShip) {\r\n    /**\r\n     * removing possible only with ends of ships,\r\n     * decks in the middle could not be deleted\r\n     */\r\n    const [type, ship, deck] = getShip(thereIsShip);\r\n    return (deck === 0 || !newState.squadron[type][ship][deck + 1])\r\n      ? removeDeck(type, ship, deck, coordinates, newState)\r\n      : newState;\r\n  }\r\n\r\n  /**\r\n   * doing nothing if there are ships diagonally\r\n   */\r\n  const thereIsShipDiagonally = isThereShipDiagonally(newState.ally, coordinates);\r\n  if (thereIsShipDiagonally) return newState;\r\n\r\n  /**\r\n   * adding deck to the ship\r\n   */\r\n  const thereIsShipInCross = isThereShipInCross(newState.ally, coordinates);\r\n  if (thereIsShipInCross.length === 1) {\r\n    /**\r\n     * if clicked at the cell next to only one ship\r\n     * horizontally or vertically,\r\n     * see if we can add deck with this cell coordinates\r\n     * to this ship\r\n     */\r\n    const [type, ship] = thereIsShipInCross[0].split(`-`).map(item => parseInt(item));\r\n    for (let newDeck = 1; newDeck < newState.squadron[type][ship].length; newDeck++) {\r\n      if (newState.squadron[type][ship][newDeck] === null) {\r\n        const toStart = (\r\n          coordinates[0] < newState.squadron[type][ship][0][0] ||\r\n          coordinates[1] < newState.squadron[type][ship][0][1]\r\n        );\r\n        return makeDeck(type, ship, newDeck, coordinates, newState, toStart);\r\n      }\r\n    }\r\n\r\n    return newState;\r\n  }\r\n\r\n  /**\r\n   * placing new ship\r\n   */\r\n  for (let i = 0; i < newState.squadron[newState.deckToPlace.type].length; i++) {\r\n    const ship = newState.squadron[newState.deckToPlace.type][i];\r\n    const shipIsFull = ship.filter(i => i).length === ship.length;\r\n    if (shipIsFull) continue;\r\n      /**\r\n       * new deck must be first deck of ship,\r\n       * adding decks handled previously with `thereIsShipInCross`.\r\n       * it`s made to prevent breaking order of ship placement\r\n       * (four decker -> three decker -> two decker -> single decker)\r\n       */\r\n    return ship[0] === null\r\n      ? makeDeck(newState.deckToPlace.type, i, 0, coordinates, newState, false)\r\n      : newState;\r\n  }\r\n\r\n  return newState;\r\n}\r\n","/**\n * input: coordinates of `a` cell\n * return: first not-false ship parameter of any `b` cell\n * (going clockwise, starting with left-top)\n *\n * ____________\n * |_b_|___|_b_|\n * |___|_a_|___|\n * |_b_|___|_b_|\n *\n */\n\nexport default (sea, coordinates) => (\n  (\n    sea[coordinates[1] - 1] && (\n      (\n        sea[coordinates[1] - 1][coordinates[0] - 1] &&\n        sea[coordinates[1] - 1][coordinates[0] - 1].ship\n      )\n      ||\n      (\n        sea[coordinates[1] - 1][coordinates[0] + 1] &&\n        sea[coordinates[1] - 1][coordinates[0] + 1].ship\n      )\n    )\n  ) || (\n    sea[coordinates[1] + 1] && (\n      (\n        sea[coordinates[1] + 1][coordinates[0] - 1] &&\n        sea[coordinates[1] + 1][coordinates[0] - 1].ship\n      )\n      ||\n      (\n        sea[coordinates[1] + 1][coordinates[0] + 1] &&\n        sea[coordinates[1] + 1][coordinates[0] + 1].ship\n      )\n    )\n  )\n);\n","/**\n * input: coordinates of `a` cell\n * return: array of not-false ship parameters of all `b` cells\n * (going clockwise, starting with top)\n *\n * ____________\n * |___|_b_|___|\n * |_b_|_a_|_b_|\n * |___|_b_|___|\n *\n */\n\nexport default (sea, coordinates) => [\n  (\n    sea[coordinates[1] - 1] &&\n    sea[coordinates[1] - 1][coordinates[0]] &&\n    sea[coordinates[1] - 1][coordinates[0]].ship\n  ),\n  (\n    sea[coordinates[1] + 1] &&\n    sea[coordinates[1] + 1][coordinates[0]] &&\n    sea[coordinates[1] + 1][coordinates[0]].ship\n  ),\n  (\n    sea[coordinates[1]][coordinates[0] - 1] &&\n    sea[coordinates[1]][coordinates[0] - 1].ship\n  ),\n  (\n    sea[coordinates[1]][coordinates[0] + 1] &&\n    sea[coordinates[1]][coordinates[0] + 1].ship\n  ),\n].filter(i => i);\n","/**\n * input: ship array\n * return: sea with all cells around ship setting miss parameter\n */\n\nexport default (sea, ship) => {\n  const newSea = [...sea];\n  const newShip = [...ship];\n\n  const [xsLength, ysLength] = newShip.length === 1        // lengths of arrays of cells around ship\n    ? [3, 3]                                              // for single decker (1x1) it's 3x3\n    : newShip[1][1] - newShip[0][1] === 0\n      ? [newShip.length + 2, 3]                           // ship length + 2 cells around\n      : [3, newShip.length + 2];\n\n  const condition = (x, y) =>                             // returns false if ship has cell with x and y coordinates\n    newShip.length === 1\n      ? !(x === 1 && y === 1)\n      : newShip[1][1] - newShip[0][1] === 0\n        ? !(x > 0 && x < newShip.length + 1 && y === 1)\n        : !(y > 0 && y < newShip.length + 1 && x === 1);\n\n  const shoot = (x, y) => {\n    const head = newShip[0];                               // first deck of ship (leftmost or topmost)\n    if (\n      newSea[y - 1 + head[1]] &&                           // -1 because 0 would hit ship cell, and we need cell before\n      newSea[y - 1 + head[1]][x - 1 + head[0]]\n    ) {\n      newSea[y - 1 + head[1]][x - 1 + head[0]].miss = true;\n    }\n  };\n\n  [...Array(ysLength).keys()].forEach(y => {\n    [...Array(xsLength).keys()].forEach(x => {\n      condition(x, y) && shoot(x, y);\n    });\n  });\n\n  return newSea;\n}\n","import itSank from '../scripts/itSank';\nimport getShip from '../scripts/getShip';\nimport isThereShip from '../scripts/isThereShip';\nimport shootAroundSankShip from '../scripts/shootAroundSankShip';\n\nexport default (state, action) => {\n  let feedback;\n  const data = [];\n  const newState = { ...state };\n  const coordinates = [...action.payload.data];\n  const thereIsShip = isThereShip(newState.ally, coordinates);\n\n  if (thereIsShip) {\n    newState.ally[coordinates[1]][coordinates[0]].hit = true;\n    const [type, ship] = getShip(thereIsShip);\n    if (itSank(type, ship, newState)) {\n      newState.allyShipsLeft -= 1;\n      if (newState.allyShipsLeft === 0) {\n        newState.feedback = { type: `defeat` };\n        return newState;\n      }\n\n      newState.squadron[type][ship].forEach(item => {\n        newState.ally[item[1]][item[0]].sank = true;\n        data.push(item);\n      });\n\n      newState.ally = shootAroundSankShip(newState.ally, data);\n      feedback = `sank`;\n    } else {\n      feedback = `hit`;\n    }\n  } else {\n    feedback = `miss`;\n    newState.ally[coordinates[1]][coordinates[0]].miss = true;\n  }\n\n  data.length === 0 && data.push(coordinates);\n  newState.feedback = { type: `feedback`, data, feedback };\n  return newState;\n}\n","export default (type, ship, state) => {\n  const areAllDecksHitted = (a, i) => state.ally[i[1]][i[0]].hit && a;\n  return state.squadron[type][ship].reduce(areAllDecksHitted, true);\n}\n","/**\n * 0 == empty\n * 1 == miss\n * 2 == sank\n * 3 == hit\n * 4 == ship\n */\n\nexport default (state) => ({\n  ...state,\n  feedback: {\n    type: `victory`,\n    data: [\n      ...state.ally.map(row =>\n        row.map(cell =>\n          cell.miss\n            ? 1\n            : cell.sank\n              ? 2\n              : cell.hit\n                ? 3\n                : cell.ship\n                  ? 4\n                  : 0\n        )\n      )\n    ],\n  },\n});\n","/**\n * there are four ship types:\n * 4-deck (1pc)\n * 3-deck (2pc)\n * 2-deck (3pc)\n * 1-deck (4pc)\n *\n * output is array of all ships\n * each ship is array of decks\n * each deck is array of coordinates -- [x, y]\n * by default deck is null\n */\n\nexport default () =>\n  [...Array(4).keys()].map(h =>\n    [...Array(h + 1)].map(_ =>\n      [...Array(4 - h)].map(_ =>\n        null\n      )\n    )\n  );\n","export default (state) => ({ ...state, feedback: null });\n","import countShips from '../scripts/countShips';\r\n\r\nconst shifts = [ // constraints of coordinates of first deck for all ship types\r\n  [\r\n    [-3, 0],\r\n    [0, -3],\r\n  ],\r\n  [\r\n    [-2, 0],\r\n    [0, -2],\r\n  ],\r\n  [\r\n    [-1, 0],\r\n    [0, -1],\r\n  ],\r\n  [\r\n    [0, 0],\r\n    [0, 0],\r\n  ],\r\n];\r\n\r\nconst getRandomCoordinates = (state, type) => {\r\n  const newState = { ...state };\r\n  /**\r\n   * create random coordinates in constrained range;\r\n   * check if there is ships diagonally or in cross\r\n   * to first deck with this coordinates and all other decks;\r\n   * if there is -- create new coordinates recursively.\r\n   * first deck of ship is leftmost or topmost\r\n   * for horizontal or vertical direction respectively\r\n   *\r\n   * output is coordinates of first deck and placing direction of other decks\r\n   */\r\n  const direction = Math.floor(Math.random() + .5); // 0 == horizontal, 1 == vertical\r\n  const coordinates = [\r\n    Math.floor(Math.random() * (10 + shifts[type][direction][0])),\r\n    Math.floor(Math.random() * (10 + shifts[type][direction][1])),\r\n  ];\r\n\r\n  try {\r\n    for (let i = -1; i <= newState.squadron[type][0].length + 1; i++) {\r\n      if (\r\n        (\r\n          direction === 1 &&\r\n          newState.ally[coordinates[1] + i] && (\r\n            (\r\n              newState.ally[coordinates[1] + i][coordinates[0] - 1] &&\r\n              newState.ally[coordinates[1] + i][coordinates[0] - 1].ship\r\n            ) || (\r\n              newState.ally[coordinates[1] + i][coordinates[0]] &&\r\n              newState.ally[coordinates[1] + i][coordinates[0]].ship\r\n            ) || (\r\n              newState.ally[coordinates[1] + i][coordinates[0] + 1] &&\r\n              newState.ally[coordinates[1] + i][coordinates[0] + 1].ship\r\n            )\r\n          )\r\n        ) || (\r\n          direction === 0 && (\r\n            (\r\n              newState.ally[coordinates[1] - 1] &&\r\n              newState.ally[coordinates[1] - 1][coordinates[0] + i] &&\r\n              newState.ally[coordinates[1] - 1][coordinates[0] + i].ship\r\n            ) || (\r\n              newState.ally[coordinates[1]][coordinates[0] + i] &&\r\n              newState.ally[coordinates[1]][coordinates[0] + i].ship\r\n            ) || (\r\n              newState.ally[coordinates[1] + 1] &&\r\n              newState.ally[coordinates[1] + 1][coordinates[0] + i] &&\r\n              newState.ally[coordinates[1] + 1][coordinates[0] + i].ship\r\n            )\r\n          )\r\n        )\r\n      ) {\r\n        return getRandomCoordinates(newState, type);\r\n      }\r\n    }\r\n  } catch ({ message }) {\r\n    console.error(message);\r\n    return {};\r\n  }\r\n\r\n  return { coordinates, direction };\r\n};\r\n\r\nexport default (state) => {\r\n  const newState = { ...state };\r\n\r\n  try {\r\n      newState.squadron.forEach((_, type) => {\r\n        newState.squadron[type].forEach((_, ship) => {\r\n          const { coordinates, direction } = getRandomCoordinates(newState, type);\r\n          if (!coordinates) throw new Error(`Browser too weak for such recursion 😔`);\r\n\r\n          newState.squadron[type][ship] = newState.squadron[type][ship].map((_, index) =>\r\n            direction === 0\r\n              ? [coordinates[0] + index, coordinates[1]]\r\n              : [coordinates[0], coordinates[1] + index]\r\n          );\r\n\r\n          newState.squadron[type][ship].forEach((item, deck) => {\r\n            newState.ally[item[1]][item[0]].ship = `${ type }-${ ship }-${ deck }`;\r\n          });\r\n        })\r\n      });\r\n  } catch ({ message }) {\r\n    console.error(message);\r\n  }\r\n\r\n  return countShips(newState);\r\n};\r\n","/**\n * 0 == empty\n * 1 == miss\n * 2 == sank\n * 3 == hit\n * 4 == ship\n */\n\nexport default (state, action) => ({\n  ...state,\n  enemy: [\n    ...action.payload.data.map((row, y) =>\n      row.map((cell, x) => ({\n        id: `cell-${ x }-${ y }-enemy`,\n        miss: cell === 1,\n        sank: cell === 2,\n        hit: cell === 3 || cell === 2,\n        ship: cell === 4 || cell === 3 || cell === 2,\n      }))\n    )\n  ],\n});\n","import shootAroundSankShip from '../scripts/shootAroundSankShip';\n\nexport default (state, action) => {\n  const newState = { ...state };\n  const ship = [...action.payload.data];\n  const feedback = action.payload.feedback;\n\n  switch (feedback) {\n    case `miss`: {\n      newState.enemy[ship[0][1]][ship[0][0]].miss = true;\n      break;\n    }\n\n    case `hit`: {\n      newState.enemy[ship[0][1]][ship[0][0]].ship = true;\n      newState.enemy[ship[0][1]][ship[0][0]].hit = true;\n      break;\n    }\n\n    case `sank`: {\n      ship.forEach(item => {\n        newState.enemy[item[1]][item[0]].hit = true;\n        newState.enemy[item[1]][item[0]].ship = true;\n        newState.enemy[item[1]][item[0]].sank = true;\n      });\n      newState.enemy = shootAroundSankShip(newState.enemy, ship);\n      newState.enemyShipsLeft -= 1;\n\n      if (newState.enemyShipsLeft === 0) {\n        newState.feedback = { type: `victory`, data: [...newState.ally] };\n        return newState;\n      }\n\n      break;\n    }\n\n    default:\n      break;\n  }\n  return newState;\n}\n","import makeSea from '../scripts/makeSea';\r\nimport placeShip from '../actions/placeShip';\r\nimport receiveFire from '../actions/receiveFire';\r\nimport sendVictory from '../actions/sendVictory';\r\nimport makeSquadron from '../scripts/makeSquadron';\r\nimport clearFeedback from '../actions/clearFeedback';\r\nimport randomPlacing from '../actions/randomPlacing';\r\nimport receiveVictory from '../actions/receiveVictory';\r\nimport receiveFeedback from '../actions/receiveFeedback';\r\n\r\n/**\r\n * ally            -- your sea\r\n * enemy           -- your opponent sea\r\n * squadron        -- see ../scripts/makeSquadron\r\n * shipsToPlace    -- number of ships to be placed (for triggering 'confirm' state)\r\n * deckToPlace     -- next deck to be placed ({ type, ship, deck } are indexes of state.squadron[type][ship][deck])\r\n * currentType     -- type (index) of ship that will be placed next (for arrow indicator in Placing component)\r\n * allyShipsLeft   -- number of your ships on water (not-sank)\r\n * enemyShipsLeft  -- number of your opponent ships on water (not-sank)\r\n * feedback        -- feedback message, formed for sending\r\n */\r\n\r\nconst initialState = () => ({\r\n  ally: makeSea(`ally`),\r\n  enemy: makeSea(`enemy`),\r\n  squadron: makeSquadron(),\r\n  shipsToPlace: 10,\r\n  deckToPlace: {\r\n    type: 0,\r\n    ship: 0,\r\n    deck: 0\r\n  },\r\n  allyShipsLeft: 10,\r\n  enemyShipsLeft: 10,\r\n  feedback: null,\r\n});\r\n\r\nexport default (state = initialState(), action) => {\r\n  switch (action.type) {\r\n    case `SEND`:\r\n      return (\r\n        action.payload.type === `feedback` ||\r\n        action.payload.type === `defeat` ||\r\n        action.payload.type === `victory`\r\n      )\r\n        ? clearFeedback(state)\r\n        : state;\r\n\r\n    case `PLACE_SHIP`:\r\n      return placeShip(state, action);\r\n\r\n    case `RANDOM`:\r\n      return randomPlacing({ ...state, ally: makeSea(`ally`), squadron: makeSquadron(), });\r\n\r\n    case `RECEIVE`: {\r\n      switch (action.payload.type) {\r\n        case `fire`:\r\n          return receiveFire(state, action);\r\n\r\n        case `feedback`:\r\n          return receiveFeedback(state, action);\r\n\r\n        case `victory`:\r\n          return receiveVictory(state, action);\r\n\r\n        case `defeat`:\r\n          return sendVictory(state, action);\r\n\r\n        default:\r\n          return state;\r\n      }\r\n    }\r\n\r\n    case `RESET`:\r\n    case `NEW_ROUND`:\r\n      return initialState();\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\nimport game from './game';\nimport rtc from './rtc';\nimport sea from './sea';\n\nconst reducers = combineReducers({\n  game,\n  rtc,\n  sea,\n});\n\nexport default reducers;\n","import send from '../actions/send';\r\nimport setRTC from '../actions/setRTC';\r\nimport receive from '../actions/receive';\r\nimport setPeerID from '../actions/setPeerID';\r\nimport clearMessage from '../actions/clearMessage';\r\nimport setIsConnected from '../actions/setIsConnected';\r\nimport setIsInitialised from '../actions/setIsInitialised';\r\n\r\n/**\r\n * peerID             -- id on Peer.js sercer\r\n * interface          -- Peer.js or AI\r\n * isClient           -- flag shows that current peer did not create session\r\n * isConnected        -- flag shows connecting to session status\r\n * isInitialised      -- flag shows that init function of current interface was called\r\n * waitingForFeedback -- flag prevent firing more than once (happens with slow network)\r\n */\r\n\r\n const initialState = () => ({\r\n  peerID: ``,\r\n  message: null,\r\n  interface: null,\r\n  isClient: false,\r\n  isConnected: false,\r\n  isInitialised: false,\r\n  waitingForFeedback: false,\r\n  lastSent: null,\r\n  lastReceived: null,\r\n});\r\n\r\nexport default (state = initialState(), action) => {\r\n  switch (action.type) {\r\n    case `SET_RTC`:\r\n      return setRTC(state, action);\r\n\r\n    case `SEND`:\r\n      return send(state, action);\r\n\r\n    case `CLEAR_MESSAGE`:\r\n      return clearMessage(state);\r\n\r\n    case `READY`:\r\n      return send(state, { payload: { type: `ready` }});\r\n\r\n    case `REPEAT`:\r\n      return send(state, { payload: { type: `repeat` }});\r\n\r\n    case `RECEIVE`:\r\n      return receive(state, action);\r\n\r\n    case `SET_PEER_ID`:\r\n      return setPeerID(state, action);\r\n\r\n    case `SET_IS_CONNECTED`:\r\n      return setIsConnected(state, action);\r\n\r\n    case `SET_IS_INITIALISED`:\r\n      return setIsInitialised(state, action);\r\n\r\n    case `RESET`:\r\n      return initialState();\r\n\r\n    default: return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(\n    applyMiddleware(thunkMiddleware)\n  )\n);\n\nexport default store;\n","import makeSea from './makeSea';\nimport makeSquadron from './makeSquadron';\nimport sendVictory from '../actions/sendVictory';\nimport receiveFire from '../actions/receiveFire';\nimport randomPlacing from '../actions/randomPlacing';\nimport receiveFeedback from '../actions/receiveFeedback';\n\n/**\n * machine states:\n * 0 -- shoot random cell (except those that already shoot)\n * 1 -- shoot cell next to last shoot in random direction (except those that already shoot)\n * 2 -- shoot cell next to last shoot in same direction\n * 3 -- shoot cell in opposite side of ship for last hit (in same direction)\n * \n * state changing:\n * |------------->|___0___|\n * |                  |\n * |<---------n---/__hit?__/\n * |                  | y\n * |              |___1___|<------------|\n * |                  |                 |\n * |              /__hit?__/            |\n * |             y/       \\n            |\n * |             /      /__sank?__/--n->|\n * |            /            |\n * |      |___2___|<-----|   | y\n * |          |          |   |\n * |      /__hit?__/--y->|   |\n * |          |n         |   |\n * |<-y--/__sank?__/     |   |\n * |          |n         |   |\n * |      |___3___|      |   |\n * |          |          |   |\n * |     /__hit?__/---y->|   |\n * |          | n            |\n * |<---------|<-------------|\n *\n */\n\nconst newSea = () => ({\n  ally: makeSea(`ally`),\n  enemy: makeSea(`enemy`),\n  squadron: makeSquadron(),\n  shipsToPlace: {\n    fourDecker: 1,\n    threeDecker: 2,\n    twoDecker: 3,\n    singleDecker: 4,\n    total: 10,\n  },\n  currentType: 0,\n  allyShipsLeft: 10,\n  enemyShipsLeft: 10,\n  feedback: null,\n});\n\nexport default function AI(props) {\n  this.init = (newGame = true) => {\n    this.state = 0;\n    this.shootLog = [];\n    this.lastShoot = null;\n    this.directions = [`up`, `down`, `left`, `right`];\n    this.directionsStack = null;\n    this.sea = randomPlacing(newSea());\n    this.fireDelay = 250; // ::ms\n    newGame && props.setIsConnected(true);\n  };\n\n  this.sendMessage = props.receive;\n\n  this.findLogIndex = (item) =>\n    this.shootLog.findIndex( ({ cell }) => cell.toString() === item.toString());\n\n  this.randomDirectionsStack = () =>\n    [...Array(4)].reduce(array => {\n      let item = Math.floor(Math.random() * 4);\n      while (array.indexOf(item) !== -1) {\n        item = Math.floor(Math.random() * 4);\n      }\n      return [...array, item];\n    }, []).map(item => this.directions[item]);\n\n  this.reverseDirection = () =>\n    (this.directions.indexOf(this.directionsStack[0]) + 1) % 2 === 0\n      ? this.directions[this.directions.indexOf(this.directionsStack[0]) - 1]\n      : this.directions[this.directions.indexOf(this.directionsStack[0]) + 1];\n\n  this.findHitIndex = () =>\n    this.shootLog.reduceRight((position, item, index) =>\n        item.feedback === `hit`\n          ? position === -1 || position - index === 1\n            ? index\n            : position\n          : position\n      , -1);\n\n  this.alreadyShoot = (coordinates) =>\n    !this.sea.enemy[coordinates[1]] ||\n    !this.sea.enemy[coordinates[1]][coordinates[0]] ||\n    this.sea.enemy[coordinates[1]][coordinates[0]].ship ||\n    this.sea.enemy[coordinates[1]][coordinates[0]].miss\n\n  this.addShift = ([x, y], direction, shift) => {\n    switch (direction) {\n      case `up`:\n        return [x, y - shift];\n\n      case `down`:\n        return [x, y + shift];\n\n      case `left`:\n        return [x - shift, y];\n\n      case `right`:\n        return [x + shift, y];\n\n      default:\n        return;\n    }\n  };\n\n  this.getRandomCoordinates = () => {\n    const randomStock = [];\n    const newCoordinates = () => [\n      Math.floor(Math.random() * 10),\n      Math.floor(Math.random() * 10),\n    ];\n    const hasCoordinates = (array, coordinates) =>\n      array.findIndex(i => i.toString() === coordinates.toString()) >= 0;\n\n    while (true) {\n      const coordinates = newCoordinates();\n      if (hasCoordinates(randomStock, coordinates)) {\n        continue;\n      }\n\n      if (this.alreadyShoot(coordinates)) {\n        randomStock.push(coordinates);\n        continue;\n      }\n      return coordinates;\n    }\n  };\n\n  this.shoot = () => {\n    switch (this.state) {\n      case 0: { // shoot random cell (except those that already shoot)\n        this.lastShoot = this.getRandomCoordinates();\n        break;\n      }\n\n      case 1: { // shoot cell next to last shoot in random direction (except those that already shoot)\n        const hit = this.findHitIndex();\n        if (this.directionsStack === null) {\n          this.directionsStack = this.randomDirectionsStack();\n        } else {\n          this.directionsStack.unshift();\n        }\n\n        if (this.directionsStack.length === 0) {\n          this.directionsStack = null;\n          this.changeState(`sank`);\n          return this.shoot();\n        }\n\n        const nextDirection = this.directionsStack[0];\n        const coordinates = this.addShift(this.shootLog[hit].cell, nextDirection, 1);\n\n        if (\n          this.alreadyShoot(coordinates) ||\n          coordinates[0] < 0 ||\n          coordinates[0] > 9 ||\n          coordinates[1] < 0 ||\n          coordinates[1] > 9\n        ) {\n          this.directionsStack.shift();\n          // this.lastDirection = nextDirection;\n          // this.lastShoot = this.addShift(this.shootLog[hit].cell, this.lastDirection, 1);\n          return this.shoot();\n        }\n\n        this.lastShoot = coordinates;\n        // this.lastDirection = nextDirection;\n        break;\n      }\n\n      case 2: { // shoot cell next to last shoot in same direction\n        const nextDirection = this.directionsStack[0];\n        const coordinates = this.addShift(this.lastShoot, nextDirection, 1);\n\n        if (\n          this.alreadyShoot(coordinates) ||\n          coordinates[0] < 0 ||\n          coordinates[0] > 9 ||\n          coordinates[1] < 0 ||\n          coordinates[1] > 9\n        ) {\n          this.changeState(`miss`);\n          return this.shoot();\n        }\n\n        this.lastShoot = coordinates;\n        break;\n      }\n\n      case 3: { // shoot cell in opposite side of ship to last hit (in same direction)\n        const nextDirection = this.reverseDirection();\n        const hit = this.findHitIndex();\n        let coordinates = this.addShift(this.shootLog[hit].cell, nextDirection, 1);\n\n        while (this.alreadyShoot(coordinates)) {\n          coordinates = this.addShift(coordinates, nextDirection, 1)\n        }\n\n        this.lastShoot = coordinates;\n        this.directionsStack = [nextDirection];\n        break;\n      }\n\n      default:\n        return;\n    }\n\n    this.shootLog.push({ cell: this.lastShoot });\n    setTimeout(() => {\n      this.sendMessage({ type: `fire`, data: this.lastShoot })\n    }, this.fireDelay);\n  };\n\n  this.changeState = (feedback) => {\n    switch (this.state) {\n      case 0: {\n        feedback === `hit` && (this.state = 1);\n        break;\n      }\n\n      case 1: {\n        this.state = feedback === `hit`\n          ? 2\n          : feedback === `sank`\n            ? 0\n            : 1;\n        break;\n      }\n\n      case 2: {\n        this.state = feedback === `hit`\n          ? 2\n          : feedback === `sank`\n            ? 0\n            : 3;\n        break;\n      }\n\n      case 3: {\n        this.state = feedback === `hit`\n          ? 2\n          : 0;\n        break;\n      }\n\n      default: break;\n    }\n  };\n\n  this.send = (data) => {\n    switch (data.type) {\n      case `fire`: {\n        this.sea = receiveFire(this.sea, { payload: data });\n        this.sendMessage(this.sea.feedback);\n        this.sea.feedback.feedback === `miss` && this.shoot();\n        this.sea.feedback = null;\n        break;\n      }\n\n      case `feedback`: {\n        this.sea = receiveFeedback(this.sea, { payload: data });\n        const logIndex = this.findLogIndex(this.lastShoot);\n        this.shootLog[logIndex].feedback = data.feedback;\n        this.changeState(data.feedback);\n\n        if (data.feedback === `sank`) {\n          this.directionsStack = null;\n        }\n\n        data.feedback !== `miss` && this.shoot();\n        break;\n      }\n\n      case `defeat`: {\n        this.sea = sendVictory(this.sea);\n        this.sendMessage(this.sea.feedback);\n        this.sendMessage({ type: `repeat` });\n        this.init(false);\n        break;\n      }\n\n      case `ready`: {\n        this.sendMessage({ type: `ready` });\n        break;\n      }\n\n      case `victory`: {\n        this.sendMessage({ type: `repeat` });\n        this.init(false);\n        break;\n      }\n\n      default:\n        break;\n    }\n  };\n}\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 8px;\r\n  width: calc(50vmin - 20px);\r\n  height: calc(50vmin - 20px);\r\n  min-width: 292px;\r\n  min-height: 292px;\r\n  box-sizing: border-box;\r\n  border: 2px solid ${ props => props.move ? css`var(--yellow)` : css`var(--olive)` };\r\n  background-color: ${ props => props.move ? css`var(--silver)` : css`var(--gray)` };\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  display: grid;\r\n  grid-gap: 1px;\r\n  grid-template: repeat(10, 1fr) / repeat(10, 1fr);\r\n`;\r\n\r\nexport default ({ move, children }) =>\r\n  <Wrapper move={ move }>\r\n    <Content move={ move } children={ children } />\r\n  </Wrapper>\r\n","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\n\r\nconst Cell = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  box-sizing: border-box;\r\n  background-color: var(--blue);\r\n  color: ${ props => props.last ? css`var(--aqua)` : css`var(--gray)` };\r\n\r\n  ${\r\n    props => props.ship && css`\r\n      :after {\r\n        content: '';\r\n        width: 60%;\r\n        height: 50%;\r\n        background-color: ${\r\n          props.last\r\n            ? css`var(--aqua)`\r\n            : props.sank\r\n                ? css`var(--gray)`\r\n                : !props.isCompleted || props.hit\r\n                  ? css`var(--silver)`\r\n                  : css`var(--white)`\r\n        };\r\n      }\r\n    `\r\n  }\r\n`;\r\n\r\nexport default (props) =>\r\n  <Cell {...props}>{ props.miss && `*` }</Cell>\r\n","import getShip from './getShip';\r\n\r\nexport default ({ cell, squadron }) => {\r\n  if (!cell) return false;\r\n\r\n  const [type, ship] = getShip(cell);\r\n\r\n  return squadron[type][ship].reduce(\r\n    (completed, deck) => completed ? deck !== null : false,\r\n    true\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Sea from './Sea';\r\nimport Cell from './Cell';\r\nimport isShipPlaced from '../scripts/isShipPlaced';\r\n\r\nconst Ally = (props) =>\r\n  <Sea move={ props.game.status === `place` || props.game.status === `confirm` || !props.game.move }>\r\n    {\r\n      props.sea.ally.map(row =>\r\n        row.map(({ id, ship, hit, miss, sank }) =>\r\n          <Cell\r\n            key={ id }\r\n            id={ id }\r\n            last={ id === props.rtc.lastReceived }\r\n            ship={ ship }\r\n            hit={ hit }\r\n            miss={ miss }\r\n            sank={ sank }\r\n            isCompleted={ isShipPlaced({ cell: ship, squadron: props.sea.squadron }) }\r\n            onClick={ () => { ((props.game.status === `place` || props.game.status === `confirm`) && (props.sea.shipsToPlace > 0 || ship)) && props.place(id) }}\r\n          />\r\n        )\r\n      )\r\n    }\r\n  </Sea>;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  game: state.game,\r\n  rtc: state.rtc,\r\n  sea: state.sea,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  place: (payload) => dispatch({ type: `PLACE_SHIP`, payload }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Ally);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Sea from './Sea';\r\nimport Cell from './Cell';\r\n\r\nconst Enemy = (props) =>\r\n  <Sea move={ props.game.move }>\r\n    {\r\n      props.sea.enemy.map(row =>\r\n        row.map(({ id, ship, hit, miss, sank }) =>\r\n          <Cell\r\n            key={ id }\r\n            id={ id }\r\n            last={ id === props.rtc.lastSent }\r\n            ship={ ship }\r\n            hit={ hit }\r\n            miss={ miss }\r\n            sank={ sank }\r\n            onClick={ () => { props.game.status === `play` && props.game.move && !props.rtc.waitingForFeedback && !hit && !miss && props.fire(id) }}\r\n            enemy\r\n          />\r\n        )\r\n      )\r\n    }\r\n  </Sea>;\r\n\r\nconst mapStateToProps = (state) => ({\r\n  game: state.game,\r\n  rtc: state.rtc,\r\n  sea: state.sea,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fire: (payload) => dispatch({ type: `SEND`, payload: { type: `fire`, data: payload }}),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Enemy);\r\n","import styled from 'styled-components';\n\nexport default styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-flow: row wrap;\n  align-items: center;\n  justify-content: center;\n`;\n","import Peer from 'peerjs';\n\nexport default function RTC(props) {\n  this.lastPeerID = null;\n\n  this.init = () => {\n    this.peer = new Peer();\n    this.connection = null;\n    props.setIsInitialised(true);\n\n    this.peer.on('open', () => {\n      if (this.peer.id === null) {\n        this.peer.id = this.lastPeerID;\n      } else {\n        this.lastPeerID = this.peer.id;\n      }\n      props.setPeerID(this.peer.id);\n    });\n\n    this.peer.on('connection', (c) => {\n      if (this.connection) {\n        c.on('open', c.close);\n        return;\n      }\n      this.connection = c;\n      this.ready();\n    });\n\n    this.peer.on('disconnected', () => {\n      // this.peer.id = this.lastPeerID;\n      // this.peer._lastServerID = this.lastPeerID;\n      this.peer.reconnect();\n    });\n\n    this.peer.on('close', () => {\n      this.connection = null;\n    });\n\n    this.peer.on('error', () => {\n      props.handleDisconnect();\n    });\n\n\n    this.peer.on('close', () => {\n      this.connection = null;\n    });\n  };\n\n  this.ready = () => {\n    props.setIsConnected(true);\n\n    this.connection.on('data', props.receive);\n\n    this.connection.on('close', () => {\n      this.connection = null;\n      props.handleDisconnect();\n    });\n  };\n\n  this.join = () => {\n    if (this.connection) this.connection.close();\n\n    this.connection = this.peer.connect(props.peerID, {\n      reliable: true,\n      serialization: 'json',\n    });\n\n    this.connection.on('open', () => {\n      props.setIsConnected(true);\n    });\n\n    this.connection.on('close', () => {\n      this.connection = null;\n      props.handleDisconnect();\n    });\n\n    this.connection.on('data', props.receive);\n  };\n\n  this.send = (data) => {\n    this.connection && this.connection.open && this.connection.send(data);\n  };\n}\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst blink = keyframes`\r\n  0% { opacity: 1 }\r\n  50% { opacity: 1 }\r\n  51% { opacity: 0 }\r\n  to { opacity: 0 }\r\n`;\r\n\r\nconst Input = styled.input.attrs({\r\n  type: `text`,\r\n  size: 17,\r\n  maxLength: 16,\r\n})`\r\n  margin: 0;\r\n  padding: 0 0 0 4px;\r\n  height: 16px;\r\n  min-width: 0;\r\n  position: relative;\r\n  z-index: 1;\r\n  background: none;\r\n  caret-color: transparent;\r\n`;\r\n\r\nconst Caret = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: ${ props => 147 - props.caret * 9 }px;\r\n  animation: ${ blink } 1s linear infinite;\r\n`;\r\n\r\nconst Placeholder = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 3px;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Background = styled.div`\r\n  position: relative;\r\n  background-color: var(--black);\r\n  color: var(--white);\r\n  overflow: hidden;\r\n\r\n  ${ Input }:not(:focus) + ${ Caret } {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 16px auto;\r\n  display: flex;\r\n  flex-flow: row;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default ({ onInput, readonly = false, submit, symbols, value = `` }) => {\r\n  const input = useRef(null);\r\n  const [caret, setCaret] = useState(symbols);\r\n  const moveCaret = (event) => {\r\n    if (event.type === `keydown` && event.key === `Enter`) {\r\n      submit();\r\n    } else {\r\n      setCaret(event.target.selectionEnd);\r\n    }\r\n  };\r\n\r\n  !readonly && useEffect(\r\n    () => {\r\n      input.current.focus();\r\n    },// eslint-disable-next-line\r\n    []\r\n  );\r\n\r\n  const inputProps = readonly\r\n    ? {\r\n      onChange: (event) => event.preventDefault(),\r\n      value,\r\n    }\r\n    : {\r\n      onClick: moveCaret,\r\n      onKeyUp: moveCaret,\r\n      onPaste: moveCaret,\r\n      onChange: moveCaret,\r\n      onKeyDown: moveCaret,\r\n      onInput,\r\n    };\r\n\r\n  return (\r\n    <Wrapper>\r\n      [\r\n      <Background>\r\n        <Placeholder>{ `·`.repeat(17 - symbols) }</Placeholder>\r\n        <Input ref={ input } { ...inputProps } />\r\n        { !readonly && <Caret caret={ caret }>_</Caret> }\r\n      </Background>\r\n      ]\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  padding: 0 16px;\r\n  height: 16px;\r\n  min-width: 60px;\r\n  background-color: var(--white);\r\n  box-shadow: 8px 8px 0 var(--black);\r\n  color: var(--gray);\r\n\r\n  & + & {\r\n    margin-left: 24px;\r\n  }\r\n\r\n  :focus {\r\n    background-color: var(--yellow);\r\n    color: var(--maroon);\r\n  }\r\n\r\n  span {\r\n    color: var(--black);\r\n  }\r\n`;\r\n\r\nexport default ({ autoFocus, className, onClick, text = ``, index }) =>\r\n  <Button\r\n    autoFocus={ autoFocus }\r\n    className={ className }\r\n    onClick={ typeof onClick === `function` ? onClick : undefined }\r\n  >\r\n    {\r\n      index === undefined\r\n        ? text\r\n        : [\r\n          text.substring(0, index),\r\n          <span key={ text }>{ text[index] }</span>,\r\n          text.substring(index + 1)\r\n        ]\r\n    }\r\n  </Button>\r\n","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport RTC from '../scripts/RTC';\r\nimport Input from './Input';\r\nimport Button from './Button';\r\n\r\nconst Wrapper = styled.div`\r\n  margin: 16px 0;\r\n  padding: 8px 4px;\r\n  width: 320px;\r\n  max-width: 80%;\r\n  position: relative;\r\n  background-color: var(--teal);\r\n  box-shadow: 16px 16px 0 var(--black);\r\n  color: var(--black);\r\n\r\n  :before {\r\n    content: '${ props => props.title_ }';\r\n    padding: 0 8px;\r\n    position: absolute;\r\n    top: 2px;\r\n    left: 50%;\r\n    width: max-content;\r\n    height: 16px;\r\n    background-color: inherit;\r\n    color: inherit;\r\n    transform: translateX(-50%);\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  padding: 32px 0;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  min-height: 294px;\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 3px double var(--black);\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n  margin-top: 32px;\r\n`;\r\n\r\nconst Select = (props) => {\r\n  const [peerID, changePeerID] = useState(``);\r\n\r\n  const setRTC = (id, isClient = false, isInitialised = false) =>\r\n    props.setRTC({\r\n      interface: new RTC({\r\n        peerID: id,\r\n        setPeerID: props.setPeerID,\r\n        setIsConnected: props.setIsConnected,\r\n        setIsInitialised: props.setIsInitialised,\r\n        receive: props.receive,\r\n        handleDisconnect: props.handleDisconnect,\r\n      }),\r\n      isClient,\r\n      isInitialised,\r\n    });\r\n\r\n  const connect = (id = peerID) =>\r\n    id &&\r\n    id !== `` &&\r\n    id !== props.rtc.peerID &&\r\n    setRTC(id, true);\r\n\r\n  const handleInput = ({ target: { value }}) => changePeerID(value);\r\n\r\n  const back = () => {\r\n    changePeerID(``);\r\n    props.handleDisconnect();\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (props.game.status !== `connect`) return;\r\n\r\n      if (props.rtc.interface === null) {\r\n        setRTC(props.rtc.peerID);\r\n      } else if (!props.rtc.isInitialised){\r\n        props.rtc.interface.init();\r\n        props.rtc.isClient && props.rtc.interface.join();\r\n      }\r\n    },// eslint-disable-next-line\r\n    [props]\r\n  );\r\n\r\n  switch (props.game.status) {\r\n    case `choose`:\r\n      return (\r\n        <Wrapper title_={ `select game type` }>\r\n          <Content>\r\n            <p>you want to play with</p>\r\n            <Buttons>\r\n              <Button autoFocus onClick={ () => { props.selectType(true) }} text={ `person` } index={ 0 } />\r\n              <Button onClick={ () => { props.selectType(false) }} text={ `computer` } index={ 0 } />\r\n            </Buttons>\r\n          </Content>\r\n        </Wrapper>\r\n    );\r\n\r\n    case `connect`:\r\n      return props.rtc.peerID === ``\r\n        ? (\r\n          <Wrapper title_={ `connect to remote player` }>\r\n            <Content>please wait</Content>\r\n          </Wrapper>\r\n        )\r\n        : (\r\n          <Wrapper title_={ `connect to remote player` }>\r\n            <Content>\r\n              <label>share this code<br />with someone<br />you want to play:</label>\r\n              <Input symbols={ props.rtc.peerID.length } value={ props.rtc.peerID } readonly />\r\n              <label>or paste code that<br />was shared to you:</label>\r\n              <Input onInput={ handleInput } submit={ connect } symbols={ peerID.length } />\r\n              <Buttons>\r\n                <Button onClick={ () => { connect() }} text={ `connect` } />\r\n                <Button onClick={ back } text={ `back` } />\r\n              </Buttons>\r\n            </Content>\r\n          </Wrapper>\r\n        );\r\n\r\n    default: return null;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  game: state.game,\r\n  rtc: state.rtc,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setRTC: (payload) => dispatch({ type: `SET_RTC`, payload }),\r\n  receive: (payload) => dispatch({ type: `RECEIVE`, payload }),\r\n  setPeerID: (payload) => dispatch({ type: `SET_PEER_ID`, payload }),\r\n  selectType: (network) => dispatch({ type: `SELECT_TYPE`, payload: network }),\r\n  setIsConnected: (payload) => dispatch({ type: 'SET_IS_CONNECTED', payload }),\r\n  setIsInitialised: (payload) => dispatch({ type: `SET_IS_INITIALISED`, payload }),\r\n  handleDisconnect: () => dispatch({ type: `RESET` }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Select);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled, { css } from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 8px 4px;\r\n  margin: 0 16px 16px 0;\r\n  width: calc(50vmin - 36px);\r\n  height: calc(50vmin - 36px);\r\n  min-width: 276px;\r\n  min-height: 276px;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  background-color: var(--gray);\r\n  box-shadow: 16px 16px 0 var(--black);\r\n  color: var(--white);\r\n\r\n  :before {\r\n    content: '${ props => props.title_ }';\r\n    padding: 0 8px;\r\n    position: absolute;\r\n    top: 2px;\r\n    left: 50%;\r\n    width: max-content;\r\n    height: 16px;\r\n    background-color: inherit;\r\n    color: inherit;\r\n    transform: translateX(-50%);\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  padding: 16px 0 0;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  border: 3px double var(--white);\r\n\r\n  hr {\r\n    margin: 8px 0;\r\n    border: 0;\r\n    outline: 0;\r\n    width: 100%;\r\n    height: 1px;\r\n    background-color: var(--white);\r\n  }\r\n`;\r\n\r\nconst ShipsLeft = styled.div`\r\n  margin-top: 8px;\r\n  display: grid;\r\n  grid-gap: 1px;\r\n  grid-template: repeat(7, auto) / repeat(8, auto);\r\n`;\r\n\r\nconst StyledDeck = styled.div`\r\n  width: calc(5vmin - 2px);\r\n  height: calc(5vmin - 2px);\r\n  min-width: 29px;\r\n  min-height: 29px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: var(--blue);\r\n\r\n  ${\r\n    props => !props.isPlaced && css`\r\n      :after {\r\n        content: '';\r\n        width: 60%;\r\n        height: 50%;\r\n        background-color: ${\r\n          props.isNext\r\n            ? css`var(--aqua)`\r\n            : css`var(--white)`\r\n        };\r\n      }\r\n    `\r\n  }\r\n`;\r\n\r\nconst Space = styled.div`\r\n  width: 0;\r\n  height: 0;\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n  margin-top: -8px;\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-flow: row;\r\n  align-items: center;\r\n`;\r\n\r\nconst Placing = (props) => {\r\n  const isPlaced = ({ type, ship, deck }) =>\r\n    props.sea.squadron[type][ship][deck] !== null;\r\n\r\n  const Deck = ({ type, ship, deck }) =>\r\n    <StyledDeck\r\n      isNext={\r\n        props.sea.deckToPlace.type === type &&\r\n        props.sea.deckToPlace.ship === ship &&\r\n        props.sea.deckToPlace.deck === deck\r\n      }\r\n      isPlaced={ isPlaced({ type, ship, deck }) }\r\n    />;\r\n\r\n  return (\r\n    <Wrapper title_={ `place your ships` }>\r\n      <Content>\r\n        click on field to place<br />or delete ship deck<hr />ships left:\r\n        <ShipsLeft>\r\n          {\r\n            [...Array(7)].reduce(\r\n              (heap, _, y) => y % 2 !== 0\r\n                ? [...heap, ...[...Array(8).keys()].map((x) => <Space key={ `${ x }-${ y }` } />)]\r\n                : [...heap, ...props.sea.squadron[y / 2].reduce(\r\n                    (row, ship, index) => {\r\n                      const i = index > 0\r\n                        ? props.sea.squadron[y / 2][index - 1].length * index + index\r\n                        : index;\r\n                      for (let deck = 0; deck < ship.length; deck++) {\r\n                        row[deck + i] = <Deck key={ `${ y / 2 }-${ index }-${ deck }` } type={ y / 2 } ship={ props.sea.squadron[y / 2].length - index - 1 } deck={ ship.length - deck - 1 } />;\r\n                      }\r\n                      return row\r\n                    },\r\n                  [...Array(8)].map((_, x) => <Space key={ `${ x }-${ y }` } />)\r\n                )],\r\n              [],\r\n            )\r\n          }\r\n        </ShipsLeft>\r\n        <hr />\r\n        <Buttons>\r\n          <Button text={ `random` } index={ 0 } onClick={ props.random } autoFocus />\r\n          <Button text={ `confirm` } index={ 0 } onClick={ props.game.status === `confirm` && props.ready } />\r\n        </Buttons>\r\n      </Content>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  game: state.game,\r\n  sea: state.sea,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  ready: () => dispatch({ type: `READY` }),\r\n  random: () => dispatch({ type: `RANDOM` }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Placing);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst Window = styled.div`\r\n  margin: 8px;\r\n  width: calc(50vmin - 20px);\r\n  height: calc(50vmin - 20px);\r\n  min-width: 292px;\r\n  min-height: 292px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 8px 4px;\r\n  margin: -16px 0 0 -16px;\r\n  width: 270px;\r\n  height: 270px;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  background-color: var(--teal);\r\n  box-shadow: 16px 16px 0 var(--black);\r\n  color: var(--black);\r\n\r\n  :before {\r\n    content: '${ props => props.title_ }';\r\n    padding: 0 8px;\r\n    position: absolute;\r\n    top: 2px;\r\n    left: 50%;\r\n    width: max-content;\r\n    height: 16px;\r\n    background-color: inherit;\r\n    color: inherit;\r\n    transform: translateX(-50%);\r\n    z-index: 1;\r\n  }\r\n`;\r\n\r\nconst Content = styled.div`\r\n  padding: 16px 0;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  flex-flow: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  border: 3px double var(--black);\r\n`;\r\n\r\nconst Text = styled.div`\r\n  margin-top: 4em;\r\n  width: 100%;\r\n  line-height: 2.5em;\r\n  text-align: center;\r\n`;\r\n\r\nconst Buttons = styled.div`\r\n`;\r\n\r\nconst Modal = (props) => {\r\n  const resultText = {\r\n    victory: `you win!`,\r\n    defeat: `you loose!`,\r\n  };\r\n\r\n  switch (props.game.status) {\r\n    case `defeat`:\r\n    case `victory`:\r\n      return props.game.isAllyWantRepeat\r\n        ? (\r\n          <Window>\r\n            <Wrapper title_={ resultText[props.game.status] }>\r\n              <Content>\r\n                <Text>\r\n                  please wait for your opponent to answer\r\n                </Text>\r\n              </Content>\r\n            </Wrapper>\r\n          </Window>\r\n        )\r\n        : (\r\n          <Window>\r\n            <Wrapper title_={ resultText[props.game.status] }>\r\n              <Content>\r\n                <Text>\r\n                  { !props.game.isAllyWantRepeat && `play another round?` }<br />\r\n                  { props.game.type === `pvp` && props.game.isEnemyWantRepeat && `your opponent insist` }\r\n                </Text>\r\n                <Buttons>\r\n                  <Button text={ `yes` } index={ 0 } onClick={ props.repeat } autoFocus />\r\n                  <Button text={ `no` } index={ 0 } onClick={ props.reset } />\r\n                </Buttons>\r\n              </Content>\r\n            </Wrapper>\r\n          </Window>\r\n        );\r\n\r\n    case `wait`:\r\n      return (\r\n        <Window>\r\n          <Wrapper title_={ `please wait` }>\r\n            <Content>\r\n              <Text>\r\n                your opponent<br/>placing their ships\r\n              </Text>\r\n            </Content>\r\n          </Wrapper>\r\n        </Window>\r\n      );\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  game: state.game,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  repeat: () => dispatch({ type: `REPEAT` }),\r\n  reset: () => dispatch({ type: `RESET` }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Ally from './Ally';\r\nimport Enemy from './Enemy';\r\nimport Ocean from './Ocean';\r\nimport Select from './Select';\r\nimport Placing from './Placing';\r\nimport Modal from './Modal';\r\n\r\nconst Game = (props) => {\r\n  switch (props.status) {\r\n    case `choose`:\r\n    case `connect`:\r\n      return <Select />;\r\n\r\n    case `place`:\r\n    case `confirm`:\r\n      return (\r\n        <Ocean>\r\n          <Ally />\r\n          <Placing />\r\n        </Ocean>\r\n      );\r\n\r\n    case `victory`:\r\n    case `wait`:\r\n      return (\r\n        <Ocean>\r\n          <Ally />\r\n          <Modal />\r\n        </Ocean>\r\n      );\r\n\r\n    case `play`:\r\n      return (\r\n        <Ocean>\r\n          <Ally />\r\n          <Enemy />\r\n        </Ocean>\r\n      );\r\n\r\n    case `defeat`:\r\n      return (\r\n        <Ocean>\r\n          <Modal />\r\n          <Enemy />\r\n        </Ocean>\r\n      );\r\n\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  status: state.game.status,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Game);\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AI from '../scripts/AI';\r\nimport Game from './Game';\r\n\r\nconst App = (props) => {\r\n  const handleKeyPress = (event) => {\r\n    const key = event.key.toLowerCase();\r\n\r\n    switch (props.game.status) {\r\n      case `choose`: {\r\n        key === `p` && props.selectType(true);\r\n        key === `c` && props.selectType(false);\r\n        break;\r\n      }\r\n\r\n      case `place`: {\r\n        key === `r` && props.random();\r\n        break;\r\n      }\r\n\r\n      case `confirm`: {\r\n        key === `r` && props.random();\r\n        key === `c` && props.ready();\r\n        break;\r\n      }\r\n\r\n      case `defeat`:\r\n      case `victory`: {\r\n        key === `y` && props.repeat();\r\n        key === `n` && props.reset();\r\n        break;\r\n      }\r\n\r\n      default: break;\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      document.removeEventListener(`keypress`, handleKeyPress);\r\n\r\n      switch (props.game.status) {\r\n        case `choose`: {\r\n          document.addEventListener(`keypress`, handleKeyPress);\r\n          break;\r\n        }\r\n\r\n        case `connect`: {\r\n          if (props.rtc.isConnected) {\r\n            props.setMove(props.rtc.isClient);\r\n            props.changeStatus(`place`);\r\n          }\r\n          break;\r\n        }\r\n\r\n        case `place`: {\r\n          if (props.game.type === `comp`) {\r\n            if (props.rtc.interface === null) {\r\n              props.setRTC({\r\n                interface: new AI({\r\n                  setIsConnected: props.setIsConnected,\r\n                  receive: props.receive,\r\n                })\r\n              });\r\n            } else if (!props.rtc.isConnected) {\r\n              props.rtc.interface.init();\r\n            }\r\n          }\r\n\r\n          props.sea.shipsToPlace === 0 && props.changeStatus(`confirm`);\r\n          document.addEventListener(`keypress`, handleKeyPress);\r\n          break;\r\n        }\r\n\r\n        case `confirm`: {\r\n          if (props.sea.shipsToPlace !== 0) {\r\n            props.changeStatus(`place`);\r\n            break;\r\n          }\r\n\r\n          if (props.game.isAllyReady) {\r\n            props.changeStatus(props.game.isEnemyReady ? `play` : `wait`);\r\n            break;\r\n          }\r\n\r\n          document.addEventListener(`keypress`, handleKeyPress);\r\n          break;\r\n        }\r\n\r\n        case `wait`: {\r\n          props.game.isEnemyReady && props.changeStatus(`play`);\r\n          break;\r\n        }\r\n\r\n        case `play`: {\r\n          break;\r\n        }\r\n\r\n        case `defeat`:\r\n        case `victory`: {\r\n          if (props.game.isAllyWantRepeat) {\r\n            props.game.isEnemyWantRepeat && props.newRound();\r\n            break;\r\n          }\r\n\r\n          document.addEventListener(`keypress`, handleKeyPress);\r\n          break;\r\n        }\r\n\r\n        default: break;\r\n      }\r\n\r\n      if (props.rtc.message) {\r\n        props.rtc.interface.send(props.rtc.message);\r\n        props.clearMessage();\r\n      } else if (props.sea.feedback) {\r\n        props.send(props.sea.feedback);\r\n      }\r\n\r\n      return () => document.removeEventListener(`keypress`, handleKeyPress);\r\n    },// eslint-disable-next-line\r\n    [props]\r\n  );\r\n\r\n  return <Game />;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  game: state.game,\r\n  rtc: state.rtc,\r\n  sea: state.sea,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  changeStatus: (status) => dispatch({ type: `CHANGE_STATUS`, payload: status }),\r\n  setIsConnected: (payload) => dispatch({ type: 'SET_IS_CONNECTED', payload }),\r\n  selectType: (network) => dispatch({ type: `SELECT_TYPE`, payload: network }),\r\n  setMove: (payload) => dispatch({ type: `SET_MOVE`, payload }),\r\n  receive: (payload) => dispatch({ type: `RECEIVE`, payload }),\r\n  setRTC: (payload) => dispatch({ type: `SET_RTC`, payload }),\r\n  clearMessage: () => dispatch({ type: `CLEAR_MESSAGE` }),\r\n  send: (payload) => dispatch({ type: `SEND`, payload }),\r\n  newRound: () => dispatch({ type: `NEW_ROUND` }),\r\n  random: () => dispatch({ type: `RANDOM` }),\r\n  repeat: () => dispatch({ type: `REPEAT` }),\r\n  ready: () => dispatch({ type: `READY` }),\r\n  reset: () => dispatch({ type: `RESET` }),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './fonts/fonts.css';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <Provider store={ store }><Router><Route path='/' component={ App } /></Router></Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}